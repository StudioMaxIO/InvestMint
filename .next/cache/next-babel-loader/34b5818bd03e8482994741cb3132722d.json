{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport InvestMint from \"../../ethereum/investMint\";\nimport Token from \"../../ethereum/token\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nvar TokenShow = /*#__PURE__*/function (_Component) {\n  _inherits(TokenShow, _Component);\n\n  var _super = _createSuper(TokenShow);\n\n  function TokenShow() {\n    var _this;\n\n    _classCallCheck(this, TokenShow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      reserveBlockErrorMessage: \"\",\n      sellTokensErrorMessage: \"\",\n      reserveBlockLoading: false,\n      sellTokensLoading: false,\n      tokensToSell: \"\",\n      tokensToTransfer: \"\",\n      transferToAddress: \"\",\n      isAuthorized: false,\n      activeReservation: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"authorizeLink\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var linkToken, accounts, approvalAmount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  reserveBlockLoading: true,\n                  reserveBlockErrorMessage: \"\"\n                });\n\n                linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n                _context.prev = 3;\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                approvalAmount = \"10000000000000000000\";\n                _context.next = 10;\n                return linkToken.methods.approve(_this.props.address, approvalAmount).send({\n                  from: accounts[0]\n                });\n\n              case 10:\n                // const reloadRoute = \"/t/\" + this.props.address;\n                // Router.pushRoute(reloadRoute);\n                //checkAuthorization();\n                window.location.reload(false);\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](3);\n\n                _this.setState({\n                  reserveTokenErrorMessage: _context.t0.message\n                });\n\n              case 16:\n                _this.setState({\n                  reserveBlockLoading: false\n                });\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"reserveTokenBlock\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var investMintToken, accounts, walletUrl;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"Reserve Token Block...\");\n\n                _this.setState({\n                  reserveBlockLoading: true,\n                  reserveBlockErrorMessage: \"\"\n                });\n\n                investMintToken = InvestMint(_this.props.address);\n                _context2.prev = 4;\n                _context2.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context2.sent;\n                _context2.next = 10;\n                return investMintToken.methods.reserveBlock().send({\n                  from: accounts[0]\n                });\n\n              case 10:\n                walletUrl = \"/t/\" + _this.props.address + \"/wallet\";\n                window.location.assign(walletUrl);\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](4);\n\n                _this.setState({\n                  reserveTokenErrorMessage: _context2.t0.message\n                });\n\n              case 17:\n                _this.setState({\n                  reserveBlockLoading: false\n                });\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 14]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"sellTokens\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  sellTokensLoading: true,\n                  sellTokensErrorMessage: \"\"\n                });\n\n                _this.setState({\n                  sellTokensLoading: false\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"transferTokens\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  transferTokensLoading: true,\n                  transferTokensErrorMessage: \"\"\n                });\n\n                _this.setState({\n                  transferTokensLoading: false\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(TokenShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this._isMounted && this.checkAuthorization();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"checkAuthorization\",\n    value: function () {\n      var _checkAuthorization = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var linkToken, accounts, authorization, walletUrl;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n                _context5.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context5.sent;\n\n                if (!accounts[0]) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                _context5.next = 7;\n                return linkToken.methods.allowance(accounts[0], this.props.address).call();\n\n              case 7:\n                authorization = _context5.sent;\n\n                if (authorization >= 1 * (10 ^ 18)) {\n                  this._isMounted && this.setState({\n                    isAuthorized: true\n                  });\n                  this.getReservation();\n                }\n\n              case 9:\n                walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n                window.location.assign(walletUrl);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function checkAuthorization() {\n        return _checkAuthorization.apply(this, arguments);\n      }\n\n      return checkAuthorization;\n    }()\n  }, {\n    key: \"getReservation\",\n    value: function () {\n      var _getReservation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var investMintToken, accounts, activeReservation;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                investMintToken = InvestMint(this.props.address);\n                _context6.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context6.sent;\n\n                if (!accounts[0]) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                _context6.next = 7;\n                return investMintToken.methods.getActiveReservation().call({\n                  from: accounts[0]\n                });\n\n              case 7:\n                activeReservation = _context6.sent;\n                this._isMounted && this.setState({\n                  activeReservation: activeReservation\n                });\n\n              case 9:\n                if (this.state.activeReservation == 0) {\n                  console.log(\"No current reservations.\");\n                } else {\n                  console.log(\"Has reservation: \", this.state.activeReservation);\n                }\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getReservation() {\n        return _getReservation.apply(this, arguments);\n      }\n\n      return getReservation;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      //this.checkAuthorization();\n      return __jsx(Layout, {\n        page: \"funding\"\n      }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Card, {\n        style: {\n          padding: \"10px\",\n          textAlign: \"left\",\n          fontSize: \"18px\"\n        }\n      }, __jsx(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, this.props.tokenName, \" | \", this.props.tokenSymbol), __jsx(\"p\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"18px\"\n        }\n      }, \"1 \", this.props.tokenSymbol, \" = \", this.props.exchangeRate, \" ETH\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Current Block Cost: \"), __jsx(\"br\", null), web3.utils.fromWei(this.props.blockCost, \"ether\"), \" Ether\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Tokens per Block:\"), \" \", __jsx(\"br\", null), web3.utils.fromWei(this.props.tokensPerBlock, \"ether\"), \" \", this.props.tokenSymbol), __jsx(Form, {\n        onSubmit: this.state.isAuthorized ? this.reserveTokenBlock : this.authorizeLink,\n        error: !!this.state.reserveBlockErrorMessage\n      }, __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.reserveBlockErrorMessage\n      }), __jsx(\"center\", null, __jsx(Button, {\n        size: \"large\",\n        loading: this.state.reserveBlockLoading,\n        color: \"teal\"\n      }, this.state.isAuthorized ? \"Reserve Block\" : \"Authorize LINK\")))))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(props) {\n        var investMintToken, summary;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                //const project = Project(props.query.address);\n                this._isMounted = false;\n                investMintToken = InvestMint(props.query.address);\n                _context7.next = 4;\n                return investMintToken.methods.getSummary().call();\n\n              case 4:\n                summary = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  address: props.query.address,\n                  tokenName: summary[0],\n                  tokenSymbol: summary[1],\n                  exchangeRate: summary[4],\n                  blockCost: summary[3],\n                  tokensPerBlock: summary[2]\n                });\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getInitialProps(_x5) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return TokenShow;\n}(Component);\n\nexport default TokenShow;","map":{"version":3,"sources":["/Users/max/Developer/StudioMax/InvestMint/pages/tokens/show.js"],"names":["React","Component","Form","Button","Input","Message","Grid","Card","Layout","InvestMint","Token","web3","Router","TokenShow","reserveBlockErrorMessage","sellTokensErrorMessage","reserveBlockLoading","sellTokensLoading","tokensToSell","tokensToTransfer","transferToAddress","isAuthorized","activeReservation","event","preventDefault","setState","linkToken","eth","getAccounts","accounts","approvalAmount","methods","approve","props","address","send","from","window","location","reload","reserveTokenErrorMessage","message","console","log","investMintToken","reserveBlock","walletUrl","assign","transferTokensLoading","transferTokensErrorMessage","_isMounted","checkAuthorization","allowance","call","authorization","getReservation","getActiveReservation","state","padding","textAlign","fontSize","tokenName","tokenSymbol","exchangeRate","utils","fromWei","blockCost","tokensPerBlock","reserveTokenBlock","authorizeLink","query","getSummary","summary"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport InvestMint from \"../../ethereum/investMint\";\nimport Token from \"../../ethereum/token\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass TokenShow extends Component {\n  state = {\n    reserveBlockErrorMessage: \"\",\n    sellTokensErrorMessage: \"\",\n    reserveBlockLoading: false,\n    sellTokensLoading: false,\n    tokensToSell: \"\",\n    tokensToTransfer: \"\",\n    transferToAddress: \"\",\n    isAuthorized: false,\n    activeReservation: \"\"\n  };\n\n  static async getInitialProps(props) {\n    //const project = Project(props.query.address);\n\n    this._isMounted = false;\n\n    const investMintToken = InvestMint(props.query.address);\n    const summary = await investMintToken.methods.getSummary().call();\n\n    return {\n      address: props.query.address,\n      tokenName: summary[0],\n      tokenSymbol: summary[1],\n      exchangeRate: summary[4],\n      blockCost: summary[3],\n      tokensPerBlock: summary[2]\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.checkAuthorization();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async checkAuthorization() {\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const authorization = await linkToken.methods\n        .allowance(accounts[0], this.props.address)\n        .call();\n\n      if (authorization >= 1 * (10 ^ 18)) {\n        this._isMounted && this.setState({ isAuthorized: true });\n        this.getReservation();\n      }\n    }\n    const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n    window.location.assign(walletUrl);\n  }\n\n  authorizeLink = async event => {\n    event.preventDefault();\n\n    this.setState({ reserveBlockLoading: true, reserveBlockErrorMessage: \"\" });\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const approvalAmount = \"10000000000000000000\";\n      await linkToken.methods.approve(this.props.address, approvalAmount).send({\n        from: accounts[0]\n      });\n      // const reloadRoute = \"/t/\" + this.props.address;\n      // Router.pushRoute(reloadRoute);\n      //checkAuthorization();\n      window.location.reload(false);\n    } catch (err) {\n      this.setState({ reserveTokenErrorMessage: err.message });\n    }\n    this.setState({ reserveBlockLoading: false });\n  };\n\n  async getReservation() {\n    const investMintToken = InvestMint(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n    if (accounts[0]) {\n      const activeReservation = await investMintToken.methods\n        .getActiveReservation()\n        .call({ from: accounts[0] });\n\n      this._isMounted &&\n        this.setState({ activeReservation: activeReservation });\n    }\n    if (this.state.activeReservation == 0) {\n      console.log(\"No current reservations.\");\n    } else {\n      console.log(\"Has reservation: \", this.state.activeReservation);\n    }\n  }\n\n  reserveTokenBlock = async event => {\n    event.preventDefault();\n    console.log(\"Reserve Token Block...\");\n\n    this.setState({ reserveBlockLoading: true, reserveBlockErrorMessage: \"\" });\n    const investMintToken = InvestMint(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await investMintToken.methods.reserveBlock().send({\n        from: accounts[0]\n      });\n      const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n      window.location.assign(walletUrl);\n    } catch (err) {\n      this.setState({ reserveTokenErrorMessage: err.message });\n    }\n    this.setState({ reserveBlockLoading: false });\n  };\n\n  sellTokens = async event => {\n    event.preventDefault();\n\n    this.setState({ sellTokensLoading: true, sellTokensErrorMessage: \"\" });\n    this.setState({ sellTokensLoading: false });\n  };\n\n  transferTokens = async event => {\n    event.preventDefault();\n\n    this.setState({\n      transferTokensLoading: true,\n      transferTokensErrorMessage: \"\"\n    });\n    this.setState({ transferTokensLoading: false });\n  };\n\n  render() {\n    //this.checkAuthorization();\n    return (\n      <Layout page=\"funding\">\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <center>\n                <Card\n                  style={{\n                    padding: \"10px\",\n                    textAlign: \"left\",\n                    fontSize: \"18px\"\n                  }}\n                >\n                  <h2\n                    style={{\n                      textAlign: \"center\"\n                    }}\n                  >\n                    {this.props.tokenName} | {this.props.tokenSymbol}\n                  </h2>\n                  <p\n                    style={{\n                      textAlign: \"center\",\n                      fontSize: \"18px\"\n                    }}\n                  >\n                    1 {this.props.tokenSymbol} = {this.props.exchangeRate} ETH\n                  </p>\n                  <p>\n                    <strong>Current Block Cost: </strong>\n                    <br />\n                    {web3.utils.fromWei(this.props.blockCost, \"ether\")} Ether\n                  </p>\n                  <p>\n                    <strong>Tokens per Block:</strong> <br />\n                    {web3.utils.fromWei(\n                      this.props.tokensPerBlock,\n                      \"ether\"\n                    )}{\" \"}\n                    {this.props.tokenSymbol}\n                  </p>\n                  <Form\n                    onSubmit={\n                      this.state.isAuthorized\n                        ? this.reserveTokenBlock\n                        : this.authorizeLink\n                    }\n                    error={!!this.state.reserveBlockErrorMessage}\n                  >\n                    <Message\n                      error\n                      header=\"Oops!\"\n                      content={this.state.reserveBlockErrorMessage}\n                    />\n                    <center>\n                      <Button\n                        size=\"large\"\n                        loading={this.state.reserveBlockLoading}\n                        color=\"teal\"\n                      >\n                        {this.state.isAuthorized\n                          ? \"Reserve Block\"\n                          : \"Authorize LINK\"}\n                      </Button>\n                    </center>\n                  </Form>\n                </Card>\n              </center>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default TokenShow;\n"]},"metadata":{},"sourceType":"module"}