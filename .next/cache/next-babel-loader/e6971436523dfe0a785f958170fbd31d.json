{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass WalletLoader extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      tokenAddress: \"\"\n    });\n\n    _defineProperty(this, \"onSubmit\", event => {\n      if (this.state.tokenAddress != \"\") {\n        var walletRoute = \"/t/\" + this.state.tokenAddress + \"/wallet\";\n        Router.pushRoute(walletRoute);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      page: \"wallet\"\n    }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"h2\", null, \"InvestMint Wallet\"))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 10\n    }, __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(Input, {\n      placeholder: \"InvestMint Token Address: 0x...\",\n      value: this.state.tokenAddress,\n      onChange: event => this.setState({\n        tokenAddress: event.target.value\n      })\n    })), __jsx(Button, {\n      color: \"teal\",\n      loading: this.state.sellTokensLoading\n    }, \"Launch Wallet\"))))));\n  }\n\n}\n\nexport default WalletLoader;","map":null,"metadata":{},"sourceType":"module"}