{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Grid, Form, Button, Input, Message, Select, Icon, Table, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport investMintFactory from \"../../ethereum/investMintFactory\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nvar InvestMintNew = /*#__PURE__*/function (_Component) {\n  _inherits(InvestMintNew, _Component);\n\n  var _super = _createSuper(InvestMintNew);\n\n  function InvestMintNew() {\n    var _this;\n\n    _classCallCheck(this, InvestMintNew);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      tokenName: \"\",\n      tokenSymbol: \"\",\n      errorMessage: \"\",\n      tokensPerBlock: \"1000\",\n      minimumReturn: \"10\",\n      blocksToStabilize: \"75\",\n      blockPricingInput1: \"#\",\n      blockPricingInput2: \"1000\",\n      blockPricingOperand: \"/\",\n      stableMintFee: \"0.1\",\n      expirationPeriod: \"24\",\n      expirationUnit: \"hours\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var expirationTime, accounts, newToken, tokenUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: \"\"\n                });\n\n                _context.prev = 2;\n                expirationTime = _this.state.expirationPeriod;\n                _context.t0 = _this.state.expirationUnit;\n                _context.next = _context.t0 === \"hours\" ? 7 : _context.t0 === \"minutes\" ? 9 : 11;\n                break;\n\n              case 7:\n                expirationTime = _this.state.expirationPeriod * 60 * 60;\n                return _context.abrupt(\"break\", 12);\n\n              case 9:\n                expirationTime = _this.state.expirationPeriod * 60;\n                return _context.abrupt(\"break\", 12);\n\n              case 11:\n                return _context.abrupt(\"break\", 12);\n\n              case 12:\n                _context.next = 14;\n                return web3.eth.getAccounts();\n\n              case 14:\n                accounts = _context.sent;\n                _context.next = 17;\n                return investMintFactory.methods.createToken(_this.state.tokenName, _this.state.tokenSymbol, _this.state.blockPricingInput1 == \"#\" ? \"0\" : _this.state.blockPricingInput1, _this.state.blockPricingOperand, _this.state.blockPricingInput2 == \"#\" ? \"0\" : _this.state.blockPricingInput2, _this.state.blocksToStabilize, web3.utils.toWei(_this.state.stableMintFee, \"ether\"), web3.utils.toWei(_this.state.tokensPerBlock, \"ether\"), expirationTime).send({\n                  from: accounts[0]\n                });\n\n              case 17:\n                newToken = _context.sent;\n                tokenUrl = \"/t/\" + newToken.events[0].address;\n                window.location.assign(tokenUrl);\n                _context.next = 25;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t1 = _context[\"catch\"](2);\n\n                _this.setState({\n                  errorMessage: _context.t1.message\n                });\n\n              case 25:\n                _this.setState({\n                  loading: false\n                });\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 22]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(InvestMintNew, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        page: \"create\"\n      }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Card, {\n        fluid: true,\n        style: {\n          padding: \"10px\",\n          textAlign: \"left\",\n          fontSize: \"18px\"\n        }\n      }, __jsx(\"h1\", null, __jsx(\"center\", null, \"Create New InvestMint Token\")), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Token Name:\"), __jsx(Input, {\n        value: this.state.tokenName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            tokenName: event.target.value\n          });\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Token Symbol:\"), __jsx(Input, {\n        value: this.state.tokenSymbol,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            tokenSymbol: event.target.value\n          });\n        }\n      }))), __jsx(Form.Group, {\n        inline: true\n      }, __jsx(Form.Field, {\n        label: \"Mint Fee Pricing:\",\n        control: \"select\",\n        value: this.state.blockPricingInput1,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            blockPricingInput1: event.target.value,\n            blockPricingInput2: event.target.value != \"#\" ? \"#\" : _this2.state.blockPricingInput2\n          });\n        }\n      }, __jsx(\"option\", {\n        value: \"#\"\n      }, \"Number of Blocks\"), __jsx(\"option\", {\n        value: \"0.5\"\n      }, \"0.5\"), __jsx(\"option\", {\n        value: \"1\"\n      }, \"1\"), __jsx(\"option\", {\n        value: \"2\"\n      }, \"2\"), __jsx(\"option\", {\n        value: \"3\"\n      }, \"3\"), __jsx(\"option\", {\n        value: \"4\"\n      }, \"4\"), __jsx(\"option\", {\n        value: \"5\"\n      }, \"5\"), __jsx(\"option\", {\n        value: \"6\"\n      }, \"6\"), __jsx(\"option\", {\n        value: \"7\"\n      }, \"7\"), __jsx(\"option\", {\n        value: \"8\"\n      }, \"8\"), __jsx(\"option\", {\n        value: \"9\"\n      }, \"9\"), __jsx(\"option\", {\n        value: \"10\"\n      }, \"10\")), __jsx(Form.Field, {\n        control: \"select\",\n        value: this.state.blockPricingOperand,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            blockPricingOperand: event.target.value\n          });\n        }\n      }, __jsx(\"option\", {\n        value: \"/\"\n      }, \"/\"), __jsx(\"option\", {\n        value: \"*\"\n      }, \"*\"), __jsx(\"option\", {\n        value: \"^\"\n      }, \"^\"), __jsx(\"option\", {\n        value: \"+\"\n      }, \"+\"), __jsx(\"option\", {\n        value: \"-\"\n      }, \"-\")), __jsx(Form.Field, {\n        control: \"select\",\n        value: this.state.blockPricingInput2,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            blockPricingInput2: event.target.value,\n            blockPricingInput1: event.target.value != \"#\" ? \"#\" : _this2.state.blockPricingInput1\n          });\n        }\n      }, __jsx(\"option\", {\n        value: \"#\"\n      }, \"Number of Blocks:\"), __jsx(\"option\", {\n        value: \"0.5\"\n      }, \"0.5\"), __jsx(\"option\", {\n        value: \"1\"\n      }, \"1\"), __jsx(\"option\", {\n        value: \"2\"\n      }, \"2\"), __jsx(\"option\", {\n        value: \"3\"\n      }, \"3\"), __jsx(\"option\", {\n        value: \"4\"\n      }, \"4\"), __jsx(\"option\", {\n        value: \"5\"\n      }, \"5\"), __jsx(\"option\", {\n        value: \"6\"\n      }, \"6\"), __jsx(\"option\", {\n        value: \"7\"\n      }, \"7\"), __jsx(\"option\", {\n        value: \"8\"\n      }, \"8\"), __jsx(\"option\", {\n        value: \"9\"\n      }, \"9\"), __jsx(\"option\", {\n        value: \"10\"\n      }, \"10\"), __jsx(\"option\", {\n        value: \"20\"\n      }, \"20\"), __jsx(\"option\", {\n        value: \"30\"\n      }, \"30\"), __jsx(\"option\", {\n        value: \"40\"\n      }, \"40\"), __jsx(\"option\", {\n        value: \"50\"\n      }, \"50\"), __jsx(\"option\", {\n        value: \"60\"\n      }, \"60\"), __jsx(\"option\", {\n        value: \"70\"\n      }, \"70\"), __jsx(\"option\", {\n        value: \"80\"\n      }, \"80\"), __jsx(\"option\", {\n        value: \"90\"\n      }, \"90\"), __jsx(\"option\", {\n        value: \"100\"\n      }, \"100\"), __jsx(\"option\", {\n        value: \"200\"\n      }, \"200\"), __jsx(\"option\", {\n        value: \"300\"\n      }, \"300\"), __jsx(\"option\", {\n        value: \"400\"\n      }, \"400\"), __jsx(\"option\", {\n        value: \"500\"\n      }, \"500\"), __jsx(\"option\", {\n        value: \"600\"\n      }, \"600\"), __jsx(\"option\", {\n        value: \"700\"\n      }, \"700\"), __jsx(\"option\", {\n        value: \"800\"\n      }, \"800\"), __jsx(\"option\", {\n        value: \"900\"\n      }, \"900\"), __jsx(\"option\", {\n        value: \"1000\"\n      }, \"1000\"))), __jsx(Form.Group, {\n        widths: \"equal\"\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Tokens Per Block:\"), __jsx(Input, {\n        value: this.state.tokensPerBlock,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            tokensPerBlock: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Blocks to Stabilize:\"), __jsx(Input, {\n        value: this.state.blocksToStabilize,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            blocksToStabilize: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Stable Mint Fee:\"), __jsx(Input, {\n        value: this.state.stableMintFee,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            stableMintFee: event.target.value\n          });\n        }\n      }))), __jsx(Form.Group, {\n        inline: true\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Reservation Expiration:\"), __jsx(Input, {\n        value: this.state.expirationPeriod,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            expirationPeriod: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, {\n        control: \"select\",\n        value: this.state.expirationUnit,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            expirationUnit: event.target.value\n          });\n        }\n      }, __jsx(\"option\", {\n        value: \"hours\"\n      }, \"Hours\"), __jsx(\"option\", {\n        value: \"minutes\"\n      }, \"Minutes\"), __jsx(\"option\", {\n        value: \"seconds\"\n      }, \"Seconds\"))), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), __jsx(\"center\", null, __jsx(Button, {\n        size: \"huge\",\n        color: \"teal\",\n        loading: this.state.loading\n      }, \"Create\", \" \", this.state.tokenSymbol ? this.state.tokenSymbol : \"Token\")))))))));\n    }\n  }]);\n\n  return InvestMintNew;\n}(Component);\n\nexport default InvestMintNew;","map":{"version":3,"sources":["/Users/max/Developer/StudioMax/InvestMint/pages/tokens/new.js"],"names":["React","Component","Grid","Form","Button","Input","Message","Select","Icon","Table","Card","Layout","investMintFactory","web3","Router","InvestMintNew","tokenName","tokenSymbol","errorMessage","tokensPerBlock","minimumReturn","blocksToStabilize","blockPricingInput1","blockPricingInput2","blockPricingOperand","stableMintFee","expirationPeriod","expirationUnit","loading","event","preventDefault","setState","expirationTime","state","eth","getAccounts","accounts","methods","createToken","utils","toWei","send","from","newToken","tokenUrl","events","address","window","location","assign","message","padding","textAlign","fontSize","onSubmit","target","value"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,KARF,EASEC,IATF,QAUO,mBAVP;AAWA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB;;IAEMC,a;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,YAAY,EAAE,EAHR;AAINC,MAAAA,cAAc,EAAE,MAJV;AAKNC,MAAAA,aAAa,EAAE,IALT;AAMNC,MAAAA,iBAAiB,EAAE,IANb;AAONC,MAAAA,kBAAkB,EAAE,GAPd;AAQNC,MAAAA,kBAAkB,EAAE,MARd;AASNC,MAAAA,mBAAmB,EAAE,GATf;AAUNC,MAAAA,aAAa,EAAE,KAVT;AAWNC,MAAAA,gBAAgB,EAAE,IAXZ;AAYNC,MAAAA,cAAc,EAAE,OAZV;AAaNC,MAAAA,OAAO,EAAE;AAbH,K;;;0EAgBG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACTA,gBAAAA,KAAK,CAACC,cAAN;;AAEA,sBAAKC,QAAL,CAAc;AAAEH,kBAAAA,OAAO,EAAE,IAAX;AAAiBV,kBAAAA,YAAY,EAAE;AAA/B,iBAAd;;AAHS;AAMHc,gBAAAA,cANG,GAMc,MAAKC,KAAL,CAAWP,gBANzB;AAAA,8BAOC,MAAKO,KAAL,CAAWN,cAPZ;AAAA,gDAQA,OARA,uBAWA,SAXA;AAAA;;AAAA;AASHK,gBAAAA,cAAc,GAAG,MAAKC,KAAL,CAAWP,gBAAX,GAA8B,EAA9B,GAAmC,EAApD;AATG;;AAAA;AAYHM,gBAAAA,cAAc,GAAG,MAAKC,KAAL,CAAWP,gBAAX,GAA8B,EAA/C;AAZG;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAiBgBb,IAAI,CAACqB,GAAL,CAASC,WAAT,EAjBhB;;AAAA;AAiBDC,gBAAAA,QAjBC;AAAA;AAAA,uBAkBgBxB,iBAAiB,CAACyB,OAAlB,CACpBC,WADoB,CAEnB,MAAKL,KAAL,CAAWjB,SAFQ,EAGnB,MAAKiB,KAAL,CAAWhB,WAHQ,EAInB,MAAKgB,KAAL,CAAWX,kBAAX,IAAiC,GAAjC,GACI,GADJ,GAEI,MAAKW,KAAL,CAAWX,kBANI,EAOnB,MAAKW,KAAL,CAAWT,mBAPQ,EAQnB,MAAKS,KAAL,CAAWV,kBAAX,IAAiC,GAAjC,GACI,GADJ,GAEI,MAAKU,KAAL,CAAWV,kBAVI,EAWnB,MAAKU,KAAL,CAAWZ,iBAXQ,EAYnBR,IAAI,CAAC0B,KAAL,CAAWC,KAAX,CAAiB,MAAKP,KAAL,CAAWR,aAA5B,EAA2C,OAA3C,CAZmB,EAanBZ,IAAI,CAAC0B,KAAL,CAAWC,KAAX,CAAiB,MAAKP,KAAL,CAAWd,cAA5B,EAA4C,OAA5C,CAbmB,EAcnBa,cAdmB,EAgBpBS,IAhBoB,CAgBf;AAAEC,kBAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD;AAAhB,iBAhBe,CAlBhB;;AAAA;AAkBDO,gBAAAA,QAlBC;AAoCDC,gBAAAA,QApCC,GAoCU,QAAQD,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAmBC,OApCrC;AAqCPC,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBL,QAAvB;AArCO;AAAA;;AAAA;AAAA;AAAA;;AAuCP,sBAAKb,QAAL,CAAc;AAAEb,kBAAAA,YAAY,EAAE,YAAIgC;AAApB,iBAAd;;AAvCO;AA0CT,sBAAKnB,QAAL,CAAc;AAAEH,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AA1CS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BA6CF;AAAA;;AACP,aACE,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC;AAAb,SACE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN,QACE,sBACE,MAAC,IAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,KAAK,EAAE;AACLuB,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,SAAS,EAAE,MAFN;AAGLC,UAAAA,QAAQ,EAAE;AAHL;AAFT,SAQE,kBACE,oDADF,CARF,EAWE,MAAC,IAAD;AACE,QAAA,QAAQ,EAAE,KAAKC,QADjB;AAEE,QAAA,KAAK,EAAE,CAAC,CAAC,KAAKrB,KAAL,CAAWf;AAFtB,SAIE,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC;AAAnB,SACE,MAAC,IAAD,CAAM,KAAN,QACE,mCADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKe,KAAL,CAAWjB,SADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAa,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AAAEf,YAAAA,SAAS,EAAEa,KAAK,CAAC0B,MAAN,CAAaC;AAA1B,WAAd,CADa;AAAA;AAFjB,QAFF,CADF,CAJF,EAeE,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC;AAAnB,SACE,MAAC,IAAD,CAAM,KAAN,QACE,qCADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWhB,WADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAY,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AAAEd,YAAAA,WAAW,EAAEY,KAAK,CAAC0B,MAAN,CAAaC;AAA5B,WAAd,CADa;AAAA;AAFjB,QAFF,CADF,CAfF,EA0BE,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM;AAAlB,SACE,MAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,EAAC,mBADR;AAEE,QAAA,OAAO,EAAC,QAFV;AAGE,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWX,kBAHpB;AAIE,QAAA,QAAQ,EAAE,kBAAAO,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AACZT,YAAAA,kBAAkB,EAAEO,KAAK,CAAC0B,MAAN,CAAaC,KADrB;AAEZjC,YAAAA,kBAAkB,EAChBM,KAAK,CAAC0B,MAAN,CAAaC,KAAb,IAAsB,GAAtB,GACI,GADJ,GAEI,MAAI,CAACvB,KAAL,CAAWV;AALL,WAAd,CADa;AAAA;AAJjB,SAcE;AAAQ,QAAA,KAAK,EAAC;AAAd,4BAdF,EAeE;AAAQ,QAAA,KAAK,EAAC;AAAd,eAfF,EAgBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAhBF,EAiBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAjBF,EAkBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAlBF,EAmBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAnBF,EAoBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aApBF,EAqBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aArBF,EAsBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAtBF,EAuBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAvBF,EAwBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAxBF,EAyBE;AAAQ,QAAA,KAAK,EAAC;AAAd,cAzBF,CADF,EA4BE,MAAC,IAAD,CAAM,KAAN;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWT,mBAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAK,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AACZP,YAAAA,mBAAmB,EAAEK,KAAK,CAAC0B,MAAN,CAAaC;AADtB,WAAd,CADa;AAAA;AAHjB,SASE;AAAQ,QAAA,KAAK,EAAC;AAAd,aATF,EAUE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAVF,EAWE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAXF,EAYE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAZF,EAaE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAbF,CA5BF,EA2CE,MAAC,IAAD,CAAM,KAAN;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWV,kBAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAM,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AACZR,YAAAA,kBAAkB,EAAEM,KAAK,CAAC0B,MAAN,CAAaC,KADrB;AAEZlC,YAAAA,kBAAkB,EAChBO,KAAK,CAAC0B,MAAN,CAAaC,KAAb,IAAsB,GAAtB,GACI,GADJ,GAEI,MAAI,CAACvB,KAAL,CAAWX;AALL,WAAd,CADa;AAAA;AAHjB,SAaE;AAAQ,QAAA,KAAK,EAAC;AAAd,6BAbF,EAcE;AAAQ,QAAA,KAAK,EAAC;AAAd,eAdF,EAeE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAfF,EAgBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAhBF,EAiBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAjBF,EAkBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAlBF,EAmBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAnBF,EAoBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aApBF,EAqBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aArBF,EAsBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAtBF,EAuBE;AAAQ,QAAA,KAAK,EAAC;AAAd,aAvBF,EAwBE;AAAQ,QAAA,KAAK,EAAC;AAAd,cAxBF,EAyBE;AAAQ,QAAA,KAAK,EAAC;AAAd,cAzBF,EA0BE;AAAQ,QAAA,KAAK,EAAC;AAAd,cA1BF,EA2BE;AAAQ,QAAA,KAAK,EAAC;AAAd,cA3BF,EA4BE;AAAQ,QAAA,KAAK,EAAC;AAAd,cA5BF,EA6BE;AAAQ,QAAA,KAAK,EAAC;AAAd,cA7BF,EA8BE;AAAQ,QAAA,KAAK,EAAC;AAAd,cA9BF,EA+BE;AAAQ,QAAA,KAAK,EAAC;AAAd,cA/BF,EAgCE;AAAQ,QAAA,KAAK,EAAC;AAAd,cAhCF,EAiCE;AAAQ,QAAA,KAAK,EAAC;AAAd,eAjCF,EAkCE;AAAQ,QAAA,KAAK,EAAC;AAAd,eAlCF,EAmCE;AAAQ,QAAA,KAAK,EAAC;AAAd,eAnCF,EAoCE;AAAQ,QAAA,KAAK,EAAC;AAAd,eApCF,EAqCE;AAAQ,QAAA,KAAK,EAAC;AAAd,eArCF,EAsCE;AAAQ,QAAA,KAAK,EAAC;AAAd,eAtCF,EAuCE;AAAQ,QAAA,KAAK,EAAC;AAAd,eAvCF,EAwCE;AAAQ,QAAA,KAAK,EAAC;AAAd,eAxCF,EAyCE;AAAQ,QAAA,KAAK,EAAC;AAAd,eAzCF,EA0CE;AAAQ,QAAA,KAAK,EAAC;AAAd,gBA1CF,CA3CF,CA1BF,EAkHE,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC;AAAnB,SACE,MAAC,IAAD,CAAM,KAAN,QACE,yCADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWd,cADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAU,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AACZZ,YAAAA,cAAc,EAAEU,KAAK,CAAC0B,MAAN,CAAaC;AADjB,WAAd,CADa;AAAA;AAFjB,QAFF,CADF,EAYE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWZ,iBADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAQ,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AACZV,YAAAA,iBAAiB,EAAEQ,KAAK,CAAC0B,MAAN,CAAaC;AADpB,WAAd,CADa;AAAA;AAFjB,QAFF,CAZF,EAuBE,MAAC,IAAD,CAAM,KAAN,QACE,wCADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWR,aADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAI,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AAAEN,YAAAA,aAAa,EAAEI,KAAK,CAAC0B,MAAN,CAAaC;AAA9B,WAAd,CADa;AAAA;AAFjB,QAFF,CAvBF,CAlHF,EAmJE,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM;AAAlB,SACE,MAAC,IAAD,CAAM,KAAN,QACE,+CADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWP,gBADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAG,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AACZL,YAAAA,gBAAgB,EAAEG,KAAK,CAAC0B,MAAN,CAAaC;AADnB,WAAd,CADa;AAAA;AAFjB,QAFF,CADF,EAYE,MAAC,IAAD,CAAM,KAAN;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWN,cAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAE,KAAK;AAAA,iBACb,MAAI,CAACE,QAAL,CAAc;AACZJ,YAAAA,cAAc,EAAEE,KAAK,CAAC0B,MAAN,CAAaC;AADjB,WAAd,CADa;AAAA;AAHjB,SASE;AAAQ,QAAA,KAAK,EAAC;AAAd,iBATF,EAUE;AAAQ,QAAA,KAAK,EAAC;AAAd,mBAVF,EAWE;AAAQ,QAAA,KAAK,EAAC;AAAd,mBAXF,CAZF,CAnJF,EA6KE,MAAC,OAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,MAAM,EAAC,OAFT;AAGE,QAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWf;AAHtB,QA7KF,EAkLE,sBACE,MAAC,MAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,OAAO,EAAE,KAAKe,KAAL,CAAWL;AAHtB,mBAKS,GALT,EAMG,KAAKK,KAAL,CAAWhB,WAAX,GACG,KAAKgB,KAAL,CAAWhB,WADd,GAEG,OARN,CADF,CAlLF,CAXF,CADF,CADF,CADF,CADF,CADF,CADF;AAuND;;;;EAtRyBhB,S;;AAyR5B,eAAec,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Form,\n  Button,\n  Input,\n  Message,\n  Select,\n  Icon,\n  Table,\n  Card\n} from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport investMintFactory from \"../../ethereum/investMintFactory\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass InvestMintNew extends Component {\n  state = {\n    tokenName: \"\",\n    tokenSymbol: \"\",\n    errorMessage: \"\",\n    tokensPerBlock: \"1000\",\n    minimumReturn: \"10\",\n    blocksToStabilize: \"75\",\n    blockPricingInput1: \"#\",\n    blockPricingInput2: \"1000\",\n    blockPricingOperand: \"/\",\n    stableMintFee: \"0.1\",\n    expirationPeriod: \"24\",\n    expirationUnit: \"hours\",\n    loading: false\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({ loading: true, errorMessage: \"\" });\n\n    try {\n      let expirationTime = this.state.expirationPeriod;\n      switch (this.state.expirationUnit) {\n        case \"hours\":\n          expirationTime = this.state.expirationPeriod * 60 * 60;\n          break;\n        case \"minutes\":\n          expirationTime = this.state.expirationPeriod * 60;\n          break;\n        default:\n          break;\n      }\n      const accounts = await web3.eth.getAccounts();\n      const newToken = await investMintFactory.methods\n        .createToken(\n          this.state.tokenName,\n          this.state.tokenSymbol,\n          this.state.blockPricingInput1 == \"#\"\n            ? \"0\"\n            : this.state.blockPricingInput1,\n          this.state.blockPricingOperand,\n          this.state.blockPricingInput2 == \"#\"\n            ? \"0\"\n            : this.state.blockPricingInput2,\n          this.state.blocksToStabilize,\n          web3.utils.toWei(this.state.stableMintFee, \"ether\"),\n          web3.utils.toWei(this.state.tokensPerBlock, \"ether\"),\n          expirationTime\n        )\n        .send({ from: accounts[0] });\n\n      const tokenUrl = \"/t/\" + newToken.events[0].address;\n      window.location.assign(tokenUrl);\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Layout page=\"create\">\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <center>\n                <Card\n                  fluid\n                  style={{\n                    padding: \"10px\",\n                    textAlign: \"left\",\n                    fontSize: \"18px\"\n                  }}\n                >\n                  <h1>\n                    <center>Create New InvestMint Token</center>\n                  </h1>\n                  <Form\n                    onSubmit={this.onSubmit}\n                    error={!!this.state.errorMessage}\n                  >\n                    <Form.Group widths=\"equal\">\n                      <Form.Field>\n                        <label>Token Name:</label>\n                        <Input\n                          value={this.state.tokenName}\n                          onChange={event =>\n                            this.setState({ tokenName: event.target.value })\n                          }\n                        />\n                      </Form.Field>\n                    </Form.Group>\n                    <Form.Group widths=\"equal\">\n                      <Form.Field>\n                        <label>Token Symbol:</label>\n                        <Input\n                          value={this.state.tokenSymbol}\n                          onChange={event =>\n                            this.setState({ tokenSymbol: event.target.value })\n                          }\n                        />\n                      </Form.Field>\n                    </Form.Group>\n                    <Form.Group inline>\n                      <Form.Field\n                        label=\"Mint Fee Pricing:\"\n                        control=\"select\"\n                        value={this.state.blockPricingInput1}\n                        onChange={event =>\n                          this.setState({\n                            blockPricingInput1: event.target.value,\n                            blockPricingInput2:\n                              event.target.value != \"#\"\n                                ? \"#\"\n                                : this.state.blockPricingInput2\n                          })\n                        }\n                      >\n                        <option value=\"#\">Number of Blocks</option>\n                        <option value=\"0.5\">0.5</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>\n                        <option value=\"8\">8</option>\n                        <option value=\"9\">9</option>\n                        <option value=\"10\">10</option>\n                      </Form.Field>\n                      <Form.Field\n                        control=\"select\"\n                        value={this.state.blockPricingOperand}\n                        onChange={event =>\n                          this.setState({\n                            blockPricingOperand: event.target.value\n                          })\n                        }\n                      >\n                        <option value=\"/\">/</option>\n                        <option value=\"*\">*</option>\n                        <option value=\"^\">^</option>\n                        <option value=\"+\">+</option>\n                        <option value=\"-\">-</option>\n                      </Form.Field>\n                      <Form.Field\n                        control=\"select\"\n                        value={this.state.blockPricingInput2}\n                        onChange={event =>\n                          this.setState({\n                            blockPricingInput2: event.target.value,\n                            blockPricingInput1:\n                              event.target.value != \"#\"\n                                ? \"#\"\n                                : this.state.blockPricingInput1\n                          })\n                        }\n                      >\n                        <option value=\"#\">Number of Blocks:</option>\n                        <option value=\"0.5\">0.5</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>\n                        <option value=\"8\">8</option>\n                        <option value=\"9\">9</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                        <option value=\"30\">30</option>\n                        <option value=\"40\">40</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"60\">60</option>\n                        <option value=\"70\">70</option>\n                        <option value=\"80\">80</option>\n                        <option value=\"90\">90</option>\n                        <option value=\"100\">100</option>\n                        <option value=\"200\">200</option>\n                        <option value=\"300\">300</option>\n                        <option value=\"400\">400</option>\n                        <option value=\"500\">500</option>\n                        <option value=\"600\">600</option>\n                        <option value=\"700\">700</option>\n                        <option value=\"800\">800</option>\n                        <option value=\"900\">900</option>\n                        <option value=\"1000\">1000</option>\n                      </Form.Field>\n                    </Form.Group>\n                    <Form.Group widths=\"equal\">\n                      <Form.Field>\n                        <label>Tokens Per Block:</label>\n                        <Input\n                          value={this.state.tokensPerBlock}\n                          onChange={event =>\n                            this.setState({\n                              tokensPerBlock: event.target.value\n                            })\n                          }\n                        />\n                      </Form.Field>\n                      <Form.Field>\n                        <label>Blocks to Stabilize:</label>\n                        <Input\n                          value={this.state.blocksToStabilize}\n                          onChange={event =>\n                            this.setState({\n                              blocksToStabilize: event.target.value\n                            })\n                          }\n                        />\n                      </Form.Field>\n                      <Form.Field>\n                        <label>Stable Mint Fee:</label>\n                        <Input\n                          value={this.state.stableMintFee}\n                          onChange={event =>\n                            this.setState({ stableMintFee: event.target.value })\n                          }\n                        />\n                      </Form.Field>\n                    </Form.Group>\n                    <Form.Group inline>\n                      <Form.Field>\n                        <label>Reservation Expiration:</label>\n                        <Input\n                          value={this.state.expirationPeriod}\n                          onChange={event =>\n                            this.setState({\n                              expirationPeriod: event.target.value\n                            })\n                          }\n                        />\n                      </Form.Field>\n                      <Form.Field\n                        control=\"select\"\n                        value={this.state.expirationUnit}\n                        onChange={event =>\n                          this.setState({\n                            expirationUnit: event.target.value\n                          })\n                        }\n                      >\n                        <option value=\"hours\">Hours</option>\n                        <option value=\"minutes\">Minutes</option>\n                        <option value=\"seconds\">Seconds</option>\n                      </Form.Field>\n                    </Form.Group>\n                    <Message\n                      error\n                      header=\"Oops!\"\n                      content={this.state.errorMessage}\n                    />\n                    <center>\n                      <Button\n                        size=\"huge\"\n                        color=\"teal\"\n                        loading={this.state.loading}\n                      >\n                        Create{\" \"}\n                        {this.state.tokenSymbol\n                          ? this.state.tokenSymbol\n                          : \"Token\"}\n                      </Button>\n                    </center>\n                  </Form>\n                </Card>\n              </center>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default InvestMintNew;\n"]},"metadata":{},"sourceType":"module"}