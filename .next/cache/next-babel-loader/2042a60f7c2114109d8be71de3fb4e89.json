{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nvar Wallet = /*#__PURE__*/function (_Component) {\n  _inherits(Wallet, _Component);\n\n  var _super = _createSuper(Wallet);\n\n  function Wallet() {\n    var _this;\n\n    _classCallCheck(this, Wallet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      tokenAddress: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      if (_this.state.tokenAddress != \"\") {\n        var mintRoute = \"/t/\" + _this.state.tokenAddress;\n        Router.pushRoute(mintRoute);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Wallet, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        page: \"mint\"\n      }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(\"h2\", null, \"InvestMint Token Mint\")))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, {\n        width: 8\n      }, __jsx(Input, {\n        placeholder: \"InvestMint Token Address: 0x...\",\n        value: this.state.tokenAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            tokenAddress: event.target.value\n          });\n        }\n      })), __jsx(Button, {\n        size: \"huge\",\n        color: \"teal\",\n        loading: this.state.sellTokensLoading\n      }, \"Launch Mint\")))))));\n    }\n  }]);\n\n  return Wallet;\n}(Component);\n\nexport default Wallet;","map":{"version":3,"sources":["/Users/max/Developer/StudioMax/InvestMint/pages/load-mint.js"],"names":["React","Component","Form","Button","Input","Message","Grid","Layout","web3","Router","Wallet","tokenAddress","event","state","mintRoute","pushRoute","onSubmit","setState","target","value","sellTokensLoading"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,IAAvC,QAAmD,mBAAnD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;IAEMC,M;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,YAAY,EAAE;AADR,K;;+DAIG,UAAAC,KAAK,EAAI;AAClB,UAAI,MAAKC,KAAL,CAAWF,YAAX,IAA2B,EAA/B,EAAmC;AACjC,YAAIG,SAAS,GAAG,QAAQ,MAAKD,KAAL,CAAWF,YAAnC;AACAF,QAAAA,MAAM,CAACM,SAAP,CAAiBD,SAAjB;AACD;AACF,K;;;;;;;6BAEQ;AAAA;;AACP,aACE,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC;AAAb,SACE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN,QACE,sBACE,0CADF,CADF,CADF,CADF,EAQE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN,QACE,sBACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKE;AAArB,SACE,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAAnB,SACE,MAAC,KAAD;AACE,QAAA,WAAW,EAAC,iCADd;AAEE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWF,YAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,iBACb,MAAI,CAACK,QAAL,CAAc;AAAEN,YAAAA,YAAY,EAAEC,KAAK,CAACM,MAAN,CAAaC;AAA7B,WAAd,CADa;AAAA;AAHjB,QADF,CADF,EAUE,MAAC,MAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO;AAHtB,uBAVF,CADF,CADF,CADF,CARF,CADF,CADF;AAqCD;;;;EAlDkBnB,S;;AAqDrB,eAAeS,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass Wallet extends Component {\n  state = {\n    tokenAddress: \"\"\n  };\n\n  onSubmit = event => {\n    if (this.state.tokenAddress != \"\") {\n      var mintRoute = \"/t/\" + this.state.tokenAddress;\n      Router.pushRoute(mintRoute);\n    }\n  };\n\n  render() {\n    return (\n      <Layout page=\"mint\">\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <center>\n                <h2>InvestMint Token Mint</h2>\n              </center>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <center>\n                <Form onSubmit={this.onSubmit}>\n                  <Form.Field width={8}>\n                    <Input\n                      placeholder=\"InvestMint Token Address: 0x...\"\n                      value={this.state.tokenAddress}\n                      onChange={event =>\n                        this.setState({ tokenAddress: event.target.value })\n                      }\n                    />\n                  </Form.Field>\n                  <Button\n                    size=\"huge\"\n                    color=\"teal\"\n                    loading={this.state.sellTokensLoading}\n                  >\n                    Launch Mint\n                  </Button>\n                </Form>\n              </center>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}