{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport InvestMint from \"../../ethereum/investMint\";\nimport Token from \"../../ethereum/token\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass TokenShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      reserveBlockErrorMessage: \"\",\n      sellTokensErrorMessage: \"\",\n      reserveBlockLoading: false,\n      sellTokensLoading: false,\n      tokensToSell: \"\",\n      tokensToTransfer: \"\",\n      transferToAddress: \"\",\n      isAuthorized: false,\n      activeReservation: \"\"\n    });\n\n    _defineProperty(this, \"authorizeLink\", async event => {\n      event.preventDefault();\n      this.setState({\n        reserveBlockLoading: true,\n        reserveBlockErrorMessage: \"\"\n      });\n      const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const approvalAmount = \"10000000000000000000\";\n        await linkToken.methods.approve(this.props.address, approvalAmount).send({\n          from: accounts[0]\n        }); // const reloadRoute = \"/t/\" + this.props.address;\n        // Router.pushRoute(reloadRoute);\n        //checkAuthorization();\n\n        window.location.reload(false);\n      } catch (err) {\n        this.setState({\n          reserveTokenErrorMessage: err.message\n        });\n      }\n\n      this.setState({\n        reserveBlockLoading: false\n      });\n    });\n\n    _defineProperty(this, \"getReservation\", async event => {\n      event.preventDefault();\n      console.log(\"Reservation before check: \", this.state.activeReservation);\n      const investMintToken = InvestMint(props.query.address);\n\n      if (accounts[0]) {\n        const activeReservation = await investMintToken.methods.getActiveReservation().call({\n          from: accounts[0]\n        });\n\n        if (activeReservation != 0) {\n          this._isMounted && this.setState({\n            activeReservation: activeReservation\n          });\n        }\n\n        console.log(\"Reservation after check: \", this.state.activeReservation);\n      }\n    });\n\n    _defineProperty(this, \"reserveTokenBlock\", async event => {\n      event.preventDefault();\n      this.setState({\n        reserveBlockLoading: true,\n        reserveBlockErrorMessage: \"\"\n      });\n      const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await linkToken.methods.approve(this.props.address, approvalAmount).send({\n          from: accounts[0]\n        }); // const reloadRoute = \"/t/\" + this.props.address;\n        // Router.pushRoute(reloadRoute);\n        //checkAuthorization();\n\n        window.location.reload(false);\n      } catch (err) {\n        this.setState({\n          reserveTokenErrorMessage: err.message\n        });\n      }\n\n      this.setState({\n        reserveBlockLoading: false\n      });\n    });\n\n    _defineProperty(this, \"sellTokens\", async event => {\n      event.preventDefault();\n      this.setState({\n        sellTokensLoading: true,\n        sellTokensErrorMessage: \"\"\n      });\n      this.setState({\n        sellTokensLoading: false\n      });\n    });\n\n    _defineProperty(this, \"transferTokens\", async event => {\n      event.preventDefault();\n      this.setState({\n        transferTokensLoading: true,\n        transferTokensErrorMessage: \"\"\n      });\n      this.setState({\n        transferTokensLoading: false\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    //const project = Project(props.query.address);\n    this._isMounted = false;\n    const investMintToken = InvestMint(props.query.address);\n    const summary = await investMintToken.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      tokenName: summary[0],\n      tokenSymbol: summary[1],\n      exchangeRate: summary[4],\n      blockCost: summary[3],\n      tokensPerBlock: summary[2]\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.checkAuthorization();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async checkAuthorization() {\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const authorization = await linkToken.methods.allowance(accounts[0], this.props.address).call();\n\n      if (authorization >= 1 * (10 ^ 18)) {\n        this._isMounted && this.setState({\n          isAuthorized: true\n        });\n        getReservation();\n      }\n    }\n  }\n\n  render() {\n    //this.checkAuthorization();\n    return __jsx(Layout, {\n      page: \"funding\"\n    }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Card, {\n      style: {\n        padding: \"10px\",\n        textAlign: \"left\",\n        fontSize: \"18px\"\n      }\n    }, __jsx(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      }\n    }, this.props.tokenName, \" | \", this.props.tokenSymbol), __jsx(\"p\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"18px\"\n      }\n    }, \"1 \", this.props.tokenSymbol, \" = \", this.props.exchangeRate, \" ETH\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Current Block Cost: \"), __jsx(\"br\", null), web3.utils.fromWei(this.props.blockCost, \"ether\"), \" Ether\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Tokens per Block:\"), \" \", __jsx(\"br\", null), web3.utils.fromWei(this.props.tokensPerBlock, \"ether\"), \" \", this.props.tokenSymbol), __jsx(Form, {\n      onSubmit: this.state.isAuthorized ? this.reserveTokenBlock : this.authorizeLink,\n      error: !!this.state.reserveBlockErrorMessage\n    }, __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.reserveBlockErrorMessage\n    }), __jsx(\"center\", null, __jsx(Button, {\n      size: \"large\",\n      loading: this.state.reserveBlockLoading,\n      color: \"teal\"\n    }, this.state.isAuthorized ? \"Reserve Block\" : \"Authorize LINK\")))))))));\n  }\n\n}\n\nexport default TokenShow;","map":{"version":3,"sources":["/Users/max/Developer/StudioMax/InvestMint/pages/tokens/show.js"],"names":["React","Component","Form","Button","Input","Message","Grid","Card","Layout","InvestMint","Token","web3","Router","TokenShow","reserveBlockErrorMessage","sellTokensErrorMessage","reserveBlockLoading","sellTokensLoading","tokensToSell","tokensToTransfer","transferToAddress","isAuthorized","activeReservation","event","preventDefault","setState","linkToken","accounts","eth","getAccounts","approvalAmount","methods","approve","props","address","send","from","window","location","reload","err","reserveTokenErrorMessage","message","console","log","state","investMintToken","query","getActiveReservation","call","_isMounted","transferTokensLoading","transferTokensErrorMessage","getInitialProps","summary","getSummary","tokenName","tokenSymbol","exchangeRate","blockCost","tokensPerBlock","componentDidMount","checkAuthorization","componentWillUnmount","authorization","allowance","getReservation","render","padding","textAlign","fontSize","utils","fromWei","reserveTokenBlock","authorizeLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport InvestMint from \"../../ethereum/investMint\";\nimport Token from \"../../ethereum/token\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass TokenShow extends Component {\n  state = {\n    reserveBlockErrorMessage: \"\",\n    sellTokensErrorMessage: \"\",\n    reserveBlockLoading: false,\n    sellTokensLoading: false,\n    tokensToSell: \"\",\n    tokensToTransfer: \"\",\n    transferToAddress: \"\",\n    isAuthorized: false,\n    activeReservation: \"\"\n  };\n\n  static async getInitialProps(props) {\n    //const project = Project(props.query.address);\n\n    this._isMounted = false;\n\n    const investMintToken = InvestMint(props.query.address);\n    const summary = await investMintToken.methods.getSummary().call();\n\n    return {\n      address: props.query.address,\n      tokenName: summary[0],\n      tokenSymbol: summary[1],\n      exchangeRate: summary[4],\n      blockCost: summary[3],\n      tokensPerBlock: summary[2]\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.checkAuthorization();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async checkAuthorization() {\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const authorization = await linkToken.methods\n        .allowance(accounts[0], this.props.address)\n        .call();\n\n      if (authorization >= 1 * (10 ^ 18)) {\n        this._isMounted && this.setState({ isAuthorized: true });\n        getReservation();\n      }\n    }\n  }\n\n  authorizeLink = async event => {\n    event.preventDefault();\n\n    this.setState({ reserveBlockLoading: true, reserveBlockErrorMessage: \"\" });\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const approvalAmount = \"10000000000000000000\";\n      await linkToken.methods.approve(this.props.address, approvalAmount).send({\n        from: accounts[0]\n      });\n      // const reloadRoute = \"/t/\" + this.props.address;\n      // Router.pushRoute(reloadRoute);\n      //checkAuthorization();\n      window.location.reload(false);\n    } catch (err) {\n      this.setState({ reserveTokenErrorMessage: err.message });\n    }\n    this.setState({ reserveBlockLoading: false });\n  };\n\n  getReservation = async event => {\n    event.preventDefault();\n    console.log(\"Reservation before check: \", this.state.activeReservation);\n    const investMintToken = InvestMint(props.query.address);\n\n    if (accounts[0]) {\n      const activeReservation = await investMintToken.methods\n        .getActiveReservation()\n        .call({ from: accounts[0] });\n\n      if (activeReservation != 0) {\n        this._isMounted &&\n          this.setState({ activeReservation: activeReservation });\n      }\n      console.log(\"Reservation after check: \", this.state.activeReservation);\n    }\n  };\n\n  reserveTokenBlock = async event => {\n    event.preventDefault();\n\n    this.setState({ reserveBlockLoading: true, reserveBlockErrorMessage: \"\" });\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await linkToken.methods.approve(this.props.address, approvalAmount).send({\n        from: accounts[0]\n      });\n      // const reloadRoute = \"/t/\" + this.props.address;\n      // Router.pushRoute(reloadRoute);\n      //checkAuthorization();\n      window.location.reload(false);\n    } catch (err) {\n      this.setState({ reserveTokenErrorMessage: err.message });\n    }\n    this.setState({ reserveBlockLoading: false });\n  };\n\n  sellTokens = async event => {\n    event.preventDefault();\n\n    this.setState({ sellTokensLoading: true, sellTokensErrorMessage: \"\" });\n    this.setState({ sellTokensLoading: false });\n  };\n\n  transferTokens = async event => {\n    event.preventDefault();\n\n    this.setState({\n      transferTokensLoading: true,\n      transferTokensErrorMessage: \"\"\n    });\n    this.setState({ transferTokensLoading: false });\n  };\n\n  render() {\n    //this.checkAuthorization();\n    return (\n      <Layout page=\"funding\">\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <center>\n                <Card\n                  style={{\n                    padding: \"10px\",\n                    textAlign: \"left\",\n                    fontSize: \"18px\"\n                  }}\n                >\n                  <h2\n                    style={{\n                      textAlign: \"center\"\n                    }}\n                  >\n                    {this.props.tokenName} | {this.props.tokenSymbol}\n                  </h2>\n                  <p\n                    style={{\n                      textAlign: \"center\",\n                      fontSize: \"18px\"\n                    }}\n                  >\n                    1 {this.props.tokenSymbol} = {this.props.exchangeRate} ETH\n                  </p>\n                  <p>\n                    <strong>Current Block Cost: </strong>\n                    <br />\n                    {web3.utils.fromWei(this.props.blockCost, \"ether\")} Ether\n                  </p>\n                  <p>\n                    <strong>Tokens per Block:</strong> <br />\n                    {web3.utils.fromWei(\n                      this.props.tokensPerBlock,\n                      \"ether\"\n                    )}{\" \"}\n                    {this.props.tokenSymbol}\n                  </p>\n                  <Form\n                    onSubmit={\n                      this.state.isAuthorized\n                        ? this.reserveTokenBlock\n                        : this.authorizeLink\n                    }\n                    error={!!this.state.reserveBlockErrorMessage}\n                  >\n                    <Message\n                      error\n                      header=\"Oops!\"\n                      content={this.state.reserveBlockErrorMessage}\n                    />\n                    <center>\n                      <Button\n                        size=\"large\"\n                        loading={this.state.reserveBlockLoading}\n                        color=\"teal\"\n                      >\n                        {this.state.isAuthorized\n                          ? \"Reserve Block\"\n                          : \"Authorize LINK\"}\n                      </Button>\n                    </center>\n                  </Form>\n                </Card>\n              </center>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default TokenShow;\n"]},"metadata":{},"sourceType":"module"}