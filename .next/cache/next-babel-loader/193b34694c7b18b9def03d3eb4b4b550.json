{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport InvestMint from \"../../ethereum/investMint\";\nimport Token from \"../../ethereum/token\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass TokenShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      reserveBlockErrorMessage: \"\",\n      purchaseBlockErrorMessage: \"\",\n      cancelBlockErrorMessage: \"\",\n      reserveBlockLoading: false,\n      purchaseBlockLoading: false,\n      cancelBlockLoading: false,\n      isAuthorized: false,\n      activeReservation: \"\",\n      activeReservationStatus: \"\",\n      activeReservationCost: \"\",\n      activeReservationExpiration: \"\",\n      activeReservationFinalized: false\n    });\n\n    _defineProperty(this, \"authorizeLink\", async event => {\n      event.preventDefault();\n      this.setState({\n        reserveBlockLoading: true,\n        reserveBlockErrorMessage: \"\"\n      });\n      const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const approvalAmount = \"10000000000000000000\";\n        await linkToken.methods.approve(this.props.address, approvalAmount).send({\n          from: accounts[0]\n        }); // const reloadRoute = \"/t/\" + this.props.address;\n        // Router.pushRoute(reloadRoute);\n        //checkAuthorization();\n\n        window.location.reload(false);\n      } catch (err) {\n        this.setState({\n          reserveTokenErrorMessage: err.message\n        });\n      }\n\n      this.setState({\n        reserveBlockLoading: false\n      });\n    });\n\n    _defineProperty(this, \"reserveTokenBlock\", async event => {\n      event.preventDefault();\n      console.log(\"Reserve Token Block...\");\n      this.setState({\n        reserveBlockLoading: true,\n        reserveBlockErrorMessage: \"\"\n      });\n      const investMintToken = InvestMint(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await investMintToken.methods.reserveBlock().send({\n          from: accounts[0]\n        }); //window.location.reload(false);\n        //const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n        //window.location.assign(walletUrl);\n      } catch (err) {\n        this.setState({\n          reserveTokenErrorMessage: err.message\n        });\n      }\n\n      this.setState({\n        reserveBlockLoading: false\n      });\n    });\n\n    _defineProperty(this, \"purchaseBlock\", async event => {\n      event.preventDefault();\n      this.setState({\n        purchaseBlockLoading: true,\n        purchaseBlockErrorMessage: \"\"\n      });\n      const investMintToken = InvestMint(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await investMintToken.methods.purchaseBlock().send({\n          from: accounts[0],\n          value: this.state.activeReservationCost\n        }); //window.location.reload(false);\n\n        const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n        window.location.assign(walletUrl);\n      } catch (err) {\n        this.setState({\n          purchaseBlockErrorMessage: err.message\n        });\n      }\n\n      this.setState({\n        purchaseBlockLoading: false\n      });\n    });\n\n    _defineProperty(this, \"cancelBlock\", async event => {\n      event.preventDefault();\n      this.setState({\n        cancelBlockLoading: true,\n        cancelBlockErrorMessage: \"\"\n      });\n      const investMintToken = InvestMint(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await investMintToken.methods.cancelBlock().send({\n          from: accounts[0]\n        }); //const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n        //window.location.assign(walletUrl);\n      } catch (err) {\n        this.setState({\n          cancelBlockErrorMessage: err.message\n        });\n      }\n\n      this.setState({\n        cancelBlockLoading: false\n      });\n      window.location.reload(false);\n    });\n  }\n\n  static async getInitialProps(props) {\n    //const project = Project(props.query.address);\n    this._isMounted = false;\n    const investMintToken = InvestMint(props.query.address);\n    const summary = await investMintToken.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      tokenName: summary[0],\n      tokenSymbol: summary[1],\n      exchangeRate: summary[4],\n      blockCost: summary[3],\n      tokensPerBlock: summary[2]\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.checkAuthorization();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async checkAuthorization() {\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const authorization = await linkToken.methods.allowance(accounts[0], this.props.address).call();\n\n      if (authorization >= 1 * (10 ^ 18)) {\n        this._isMounted && this.setState({\n          isAuthorized: true\n        });\n        this.getReservation();\n      }\n    }\n  }\n\n  async getReservation() {\n    const investMintToken = InvestMint(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const activeReservation = await investMintToken.methods.getActiveReservation().call({\n        from: accounts[0]\n      });\n      this._isMounted && this.setState({\n        activeReservation: activeReservation\n      });\n    }\n\n    if (this.state.activeReservation == 0) {\n      console.log(\"No current reservations.\");\n    } else if (this.state.activeReservation != \"\") {\n      console.log(\"Has reservation: \", this.state.activeReservation);\n      const reservationSummary = await investMintToken.methods.getReservationSummary(this.state.activeReservation).call();\n      this.setState({\n        activeReservationCost: reservationSummary[2],\n        activeReservationFinalized: reservationSummary[4]\n      });\n\n      switch (reservationSummary[1]) {\n        case \"0\":\n          this.setState({\n            activeReservationStatus: \"open\"\n          });\n          break;\n\n        case \"1\":\n          this.setState({\n            activeReservationStatus: \"claimed\"\n          });\n          break;\n\n        case \"2\":\n          this.setState({\n            activeReservationStatus: \"canceled\"\n          });\n          break;\n\n        case \"3\":\n          this.setState({\n            activeReservationStatus: \"expired\"\n          });\n          break;\n\n        default:\n          this.setState({\n            activeReservationStatus: \"unknown\"\n          });\n      }\n\n      let reservationTimestamp = reservationSummary[3];\n      var ts = new Date(reservationTimestamp * 1000);\n      var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      var hours = [\"12\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"];\n      var ampm = ts.getHours() < 12 ? \"AM\" : \"PM\";\n      var year = ts.getFullYear();\n      var month = months[ts.getMonth()];\n      var date = ts.getDate();\n      var hour = hours[ts.getHours()];\n      var min = \"0\" + ts.getMinutes();\n      var sec = \"0\" + ts.getSeconds();\n      var formattedDateTime = month + \" \" + date + \" \" + year + \" \" + hour + \":\" + min.substr(-2) + \":\" + sec.substr(-2) + \" \" + ampm;\n      this.setState({\n        activeReservationExpiration: formattedDateTime\n      }); //window.location.reload(false);\n      //const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n      //window.location.assign(walletUrl);\n    } else {}\n  }\n\n  render() {\n    if (this.state.activeReservation == \"\" || this.state.activeReservation == 0 || this.state.activeReservationStatus == \"expired\") {\n      return __jsx(Layout, {\n        page: \"mint\"\n      }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Card, {\n        style: {\n          padding: \"10px\",\n          textAlign: \"left\",\n          fontSize: \"18px\"\n        }\n      }, __jsx(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, this.props.tokenName, \" | \", this.props.tokenSymbol), __jsx(\"p\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"18px\"\n        }\n      }, \"1 \", this.props.tokenSymbol, \" =\", \" \", web3.utils.fromWei(this.props.exchangeRate, \"ether\"), \" ETH\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Current Block Cost: \"), __jsx(\"br\", null), web3.utils.fromWei(this.props.blockCost, \"ether\"), \" Ether\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Tokens per Block:\"), \" \", __jsx(\"br\", null), web3.utils.fromWei(this.props.tokensPerBlock, \"ether\"), \" \", this.props.tokenSymbol), __jsx(Form, {\n        onSubmit: this.state.isAuthorized ? this.reserveTokenBlock : this.authorizeLink,\n        error: !!this.state.reserveBlockErrorMessage\n      }, __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.reserveBlockErrorMessage\n      }), __jsx(\"center\", null, __jsx(Button, {\n        size: \"large\",\n        loading: this.state.reserveBlockLoading,\n        color: \"teal\"\n      }, this.state.isAuthorized ? \"Reserve Block\" : \"Authorize LINK\")))))))));\n    } else {\n      return __jsx(Layout, {\n        page: \"mint\"\n      }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Card, {\n        style: {\n          padding: \"10px\",\n          textAlign: \"left\",\n          fontSize: \"18px\"\n        }\n      }, __jsx(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, this.props.tokenName, \" | \", this.props.tokenSymbol), __jsx(\"p\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"18px\"\n        }\n      }, \"1 \", this.props.tokenSymbol, \" =\", \" \", web3.utils.fromWei(this.props.exchangeRate, \"ether\"), \" ETH\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Reserved Block Cost: \"), __jsx(\"br\", null), web3.utils.fromWei(this.state.activeReservationCost, \"ether\"), \" \", \"Ether\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Block Expiration: \"), __jsx(\"br\", null), this.state.activeReservationExpiration), __jsx(\"p\", null, __jsx(\"strong\", null, \"Block Status: \"), __jsx(\"br\", null), this.state.activeReservationStatus), __jsx(\"p\", null, __jsx(\"strong\", null, \"Tokens per Block:\"), \" \", __jsx(\"br\", null), web3.utils.fromWei(this.props.tokensPerBlock, \"ether\"), \" \", this.props.tokenSymbol), __jsx(Form, {\n        onSubmit: this.purchaseBlock,\n        error: !!this.state.purchaseBlockErrorMessage\n      }, __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.purchaseBlockErrorMessage\n      }), __jsx(\"center\", null, __jsx(Button, {\n        size: \"large\",\n        loading: this.state.purchaseBlockLoading,\n        color: \"teal\"\n      }, \" \", \"Purchase Block\"), __jsx(\"br\", null))), __jsx(Form, null, __jsx(\"center\", null, __jsx(Button, {\n        style: {\n          marginTop: \"10px\"\n        },\n        size: \"large\",\n        loading: this.state.cancelBlockLoading,\n        color: \"red\"\n      }, \" \", \"Cancel Reservation\")))))))));\n    }\n  }\n\n}\n\nexport default TokenShow;","map":{"version":3,"sources":["/Users/max/Developer/StudioMax/InvestMint/pages/tokens/show.js"],"names":["React","Component","Form","Button","Input","Message","Grid","Card","Layout","InvestMint","Token","web3","Router","TokenShow","reserveBlockErrorMessage","purchaseBlockErrorMessage","cancelBlockErrorMessage","reserveBlockLoading","purchaseBlockLoading","cancelBlockLoading","isAuthorized","activeReservation","activeReservationStatus","activeReservationCost","activeReservationExpiration","activeReservationFinalized","event","preventDefault","setState","linkToken","accounts","eth","getAccounts","approvalAmount","methods","approve","props","address","send","from","window","location","reload","err","reserveTokenErrorMessage","message","console","log","investMintToken","reserveBlock","purchaseBlock","value","state","walletUrl","assign","cancelBlock","getInitialProps","_isMounted","query","summary","getSummary","call","tokenName","tokenSymbol","exchangeRate","blockCost","tokensPerBlock","componentDidMount","checkAuthorization","componentWillUnmount","authorization","allowance","getReservation","getActiveReservation","reservationSummary","getReservationSummary","reservationTimestamp","ts","Date","months","hours","ampm","getHours","year","getFullYear","month","getMonth","date","getDate","hour","min","getMinutes","sec","getSeconds","formattedDateTime","substr","render","padding","textAlign","fontSize","utils","fromWei","reserveTokenBlock","authorizeLink","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport InvestMint from \"../../ethereum/investMint\";\nimport Token from \"../../ethereum/token\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass TokenShow extends Component {\n  state = {\n    reserveBlockErrorMessage: \"\",\n    purchaseBlockErrorMessage: \"\",\n    cancelBlockErrorMessage: \"\",\n    reserveBlockLoading: false,\n    purchaseBlockLoading: false,\n    cancelBlockLoading: false,\n    isAuthorized: false,\n    activeReservation: \"\",\n    activeReservationStatus: \"\",\n    activeReservationCost: \"\",\n    activeReservationExpiration: \"\",\n    activeReservationFinalized: false\n  };\n\n  static async getInitialProps(props) {\n    //const project = Project(props.query.address);\n\n    this._isMounted = false;\n\n    const investMintToken = InvestMint(props.query.address);\n    const summary = await investMintToken.methods.getSummary().call();\n\n    return {\n      address: props.query.address,\n      tokenName: summary[0],\n      tokenSymbol: summary[1],\n      exchangeRate: summary[4],\n      blockCost: summary[3],\n      tokensPerBlock: summary[2]\n    };\n  }\n\n  async componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.checkAuthorization();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async checkAuthorization() {\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const authorization = await linkToken.methods\n        .allowance(accounts[0], this.props.address)\n        .call();\n\n      if (authorization >= 1 * (10 ^ 18)) {\n        this._isMounted && this.setState({ isAuthorized: true });\n        this.getReservation();\n      }\n    }\n  }\n\n  authorizeLink = async event => {\n    event.preventDefault();\n\n    this.setState({ reserveBlockLoading: true, reserveBlockErrorMessage: \"\" });\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const approvalAmount = \"10000000000000000000\";\n      await linkToken.methods.approve(this.props.address, approvalAmount).send({\n        from: accounts[0]\n      });\n      // const reloadRoute = \"/t/\" + this.props.address;\n      // Router.pushRoute(reloadRoute);\n      //checkAuthorization();\n      window.location.reload(false);\n    } catch (err) {\n      this.setState({ reserveTokenErrorMessage: err.message });\n    }\n    this.setState({ reserveBlockLoading: false });\n  };\n\n  async getReservation() {\n    const investMintToken = InvestMint(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n    if (accounts[0]) {\n      const activeReservation = await investMintToken.methods\n        .getActiveReservation()\n        .call({ from: accounts[0] });\n\n      this._isMounted &&\n        this.setState({ activeReservation: activeReservation });\n    }\n    if (this.state.activeReservation == 0) {\n      console.log(\"No current reservations.\");\n    } else if (this.state.activeReservation != \"\") {\n      console.log(\"Has reservation: \", this.state.activeReservation);\n      const reservationSummary = await investMintToken.methods\n        .getReservationSummary(this.state.activeReservation)\n        .call();\n      this.setState({\n        activeReservationCost: reservationSummary[2],\n        activeReservationFinalized: reservationSummary[4]\n      });\n      switch (reservationSummary[1]) {\n        case \"0\":\n          this.setState({ activeReservationStatus: \"open\" });\n          break;\n        case \"1\":\n          this.setState({ activeReservationStatus: \"claimed\" });\n          break;\n        case \"2\":\n          this.setState({ activeReservationStatus: \"canceled\" });\n          break;\n        case \"3\":\n          this.setState({ activeReservationStatus: \"expired\" });\n          break;\n        default:\n          this.setState({ activeReservationStatus: \"unknown\" });\n      }\n      let reservationTimestamp = reservationSummary[3];\n\n      var ts = new Date(reservationTimestamp * 1000);\n      var months = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\"\n      ];\n      var hours = [\n        \"12\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"10\",\n        \"11\",\n        \"12\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"10\",\n        \"11\"\n      ];\n      var ampm = ts.getHours() < 12 ? \"AM\" : \"PM\";\n      var year = ts.getFullYear();\n      var month = months[ts.getMonth()];\n      var date = ts.getDate();\n      var hour = hours[ts.getHours()];\n      var min = \"0\" + ts.getMinutes();\n      var sec = \"0\" + ts.getSeconds();\n      var formattedDateTime =\n        month +\n        \" \" +\n        date +\n        \" \" +\n        year +\n        \" \" +\n        hour +\n        \":\" +\n        min.substr(-2) +\n        \":\" +\n        sec.substr(-2) +\n        \" \" +\n        ampm;\n      this.setState({ activeReservationExpiration: formattedDateTime });\n      //window.location.reload(false);\n      //const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n      //window.location.assign(walletUrl);\n    } else {\n    }\n  }\n\n  reserveTokenBlock = async event => {\n    event.preventDefault();\n    console.log(\"Reserve Token Block...\");\n\n    this.setState({ reserveBlockLoading: true, reserveBlockErrorMessage: \"\" });\n    const investMintToken = InvestMint(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await investMintToken.methods.reserveBlock().send({\n        from: accounts[0]\n      });\n      //window.location.reload(false);\n      //const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n      //window.location.assign(walletUrl);\n    } catch (err) {\n      this.setState({ reserveTokenErrorMessage: err.message });\n    }\n    this.setState({ reserveBlockLoading: false });\n  };\n\n  purchaseBlock = async event => {\n    event.preventDefault();\n\n    this.setState({\n      purchaseBlockLoading: true,\n      purchaseBlockErrorMessage: \"\"\n    });\n\n    const investMintToken = InvestMint(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await investMintToken.methods.purchaseBlock().send({\n        from: accounts[0],\n        value: this.state.activeReservationCost\n      });\n      //window.location.reload(false);\n      const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n      window.location.assign(walletUrl);\n    } catch (err) {\n      this.setState({ purchaseBlockErrorMessage: err.message });\n    }\n    this.setState({ purchaseBlockLoading: false });\n  };\n\n  cancelBlock = async event => {\n    event.preventDefault();\n\n    this.setState({\n      cancelBlockLoading: true,\n      cancelBlockErrorMessage: \"\"\n    });\n\n    const investMintToken = InvestMint(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await investMintToken.methods.cancelBlock().send({\n        from: accounts[0]\n      });\n      //const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n      //window.location.assign(walletUrl);\n    } catch (err) {\n      this.setState({ cancelBlockErrorMessage: err.message });\n    }\n    this.setState({ cancelBlockLoading: false });\n    window.location.reload(false);\n  };\n\n  render() {\n    if (\n      this.state.activeReservation == \"\" ||\n      this.state.activeReservation == 0 ||\n      this.state.activeReservationStatus == \"expired\"\n    ) {\n      return (\n        <Layout page=\"mint\">\n          <Grid>\n            <Grid.Row>\n              <Grid.Column>\n                <center>\n                  <Card\n                    style={{\n                      padding: \"10px\",\n                      textAlign: \"left\",\n                      fontSize: \"18px\"\n                    }}\n                  >\n                    <h2\n                      style={{\n                        textAlign: \"center\"\n                      }}\n                    >\n                      {this.props.tokenName} | {this.props.tokenSymbol}\n                    </h2>\n                    <p\n                      style={{\n                        textAlign: \"center\",\n                        fontSize: \"18px\"\n                      }}\n                    >\n                      1 {this.props.tokenSymbol} ={\" \"}\n                      {web3.utils.fromWei(this.props.exchangeRate, \"ether\")} ETH\n                    </p>\n                    <p>\n                      <strong>Current Block Cost: </strong>\n                      <br />\n                      {web3.utils.fromWei(this.props.blockCost, \"ether\")} Ether\n                    </p>\n                    <p>\n                      <strong>Tokens per Block:</strong> <br />\n                      {web3.utils.fromWei(\n                        this.props.tokensPerBlock,\n                        \"ether\"\n                      )}{\" \"}\n                      {this.props.tokenSymbol}\n                    </p>\n                    <Form\n                      onSubmit={\n                        this.state.isAuthorized\n                          ? this.reserveTokenBlock\n                          : this.authorizeLink\n                      }\n                      error={!!this.state.reserveBlockErrorMessage}\n                    >\n                      <Message\n                        error\n                        header=\"Oops!\"\n                        content={this.state.reserveBlockErrorMessage}\n                      />\n                      <center>\n                        <Button\n                          size=\"large\"\n                          loading={this.state.reserveBlockLoading}\n                          color=\"teal\"\n                        >\n                          {this.state.isAuthorized\n                            ? \"Reserve Block\"\n                            : \"Authorize LINK\"}\n                        </Button>\n                      </center>\n                    </Form>\n                  </Card>\n                </center>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Layout>\n      );\n    } else {\n      return (\n        <Layout page=\"mint\">\n          <Grid>\n            <Grid.Row>\n              <Grid.Column>\n                <center>\n                  <Card\n                    style={{\n                      padding: \"10px\",\n                      textAlign: \"left\",\n                      fontSize: \"18px\"\n                    }}\n                  >\n                    <h2\n                      style={{\n                        textAlign: \"center\"\n                      }}\n                    >\n                      {this.props.tokenName} | {this.props.tokenSymbol}\n                    </h2>\n                    <p\n                      style={{\n                        textAlign: \"center\",\n                        fontSize: \"18px\"\n                      }}\n                    >\n                      1 {this.props.tokenSymbol} ={\" \"}\n                      {web3.utils.fromWei(this.props.exchangeRate, \"ether\")} ETH\n                    </p>\n                    <p>\n                      <strong>Reserved Block Cost: </strong>\n                      <br />\n                      {web3.utils.fromWei(\n                        this.state.activeReservationCost,\n                        \"ether\"\n                      )}{\" \"}\n                      Ether\n                    </p>\n                    <p>\n                      <strong>Block Expiration: </strong>\n                      <br />\n                      {this.state.activeReservationExpiration}\n                    </p>\n                    <p>\n                      <strong>Block Status: </strong>\n                      <br />\n                      {this.state.activeReservationStatus}\n                    </p>\n                    <p>\n                      <strong>Tokens per Block:</strong> <br />\n                      {web3.utils.fromWei(\n                        this.props.tokensPerBlock,\n                        \"ether\"\n                      )}{\" \"}\n                      {this.props.tokenSymbol}\n                    </p>\n                    <Form\n                      onSubmit={this.purchaseBlock}\n                      error={!!this.state.purchaseBlockErrorMessage}\n                    >\n                      <Message\n                        error\n                        header=\"Oops!\"\n                        content={this.state.purchaseBlockErrorMessage}\n                      />\n                      <center>\n                        <Button\n                          size=\"large\"\n                          loading={this.state.purchaseBlockLoading}\n                          color=\"teal\"\n                        >\n                          {\" \"}\n                          Purchase Block\n                        </Button>\n                        <br />\n                      </center>\n                    </Form>\n\n                    <Form>\n                      <center>\n                        <Button\n                          style={{ marginTop: \"10px\" }}\n                          size=\"large\"\n                          loading={this.state.cancelBlockLoading}\n                          color=\"red\"\n                        >\n                          {\" \"}\n                          Cancel Reservation\n                        </Button>\n                      </center>\n                    </Form>\n                  </Card>\n                </center>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Layout>\n      );\n    }\n  }\n}\n\nexport default TokenShow;\n"]},"metadata":{},"sourceType":"module"}