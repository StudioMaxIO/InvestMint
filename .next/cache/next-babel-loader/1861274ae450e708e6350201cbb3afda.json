{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport InvestMint from \"../../ethereum/investMint\";\nimport Token from \"../../ethereum/token\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass TokenShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      reserveBlockErrorMessage: \"\",\n      sellTokensErrorMessage: \"\",\n      purchaseBlockErrorMessage: \"\",\n      cancelBlockErrorMessage: \"\",\n      reserveBlockLoading: false,\n      sellTokensLoading: false,\n      purchaseBlockLoading: false,\n      cancelBlockLoading: false,\n      tokensToSell: \"\",\n      tokensToTransfer: \"\",\n      transferToAddress: \"\",\n      isAuthorized: false,\n      activeReservation: \"\",\n      activeReservationStatus: \"\",\n      activeReservationCost: \"\",\n      activeReservationExpiration: \"\",\n      activeReservationFinalized: false\n    });\n\n    _defineProperty(this, \"authorizeLink\", async event => {\n      event.preventDefault();\n      this.setState({\n        reserveBlockLoading: true,\n        reserveBlockErrorMessage: \"\"\n      });\n      const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        const approvalAmount = \"10000000000000000000\";\n        await linkToken.methods.approve(this.props.address, approvalAmount).send({\n          from: accounts[0]\n        }); // const reloadRoute = \"/t/\" + this.props.address;\n        // Router.pushRoute(reloadRoute);\n        //checkAuthorization();\n\n        window.location.reload(false);\n      } catch (err) {\n        this.setState({\n          reserveTokenErrorMessage: err.message\n        });\n      }\n\n      this.setState({\n        reserveBlockLoading: false\n      });\n    });\n\n    _defineProperty(this, \"reserveTokenBlock\", async event => {\n      event.preventDefault();\n      console.log(\"Reserve Token Block...\");\n      this.setState({\n        reserveBlockLoading: true,\n        reserveBlockErrorMessage: \"\"\n      });\n      const investMintToken = InvestMint(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await investMintToken.methods.reserveBlock().send({\n          from: accounts[0]\n        });\n        window.location.reload(false); //const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n        //window.location.assign(walletUrl);\n      } catch (err) {\n        this.setState({\n          reserveTokenErrorMessage: err.message\n        });\n      }\n\n      this.setState({\n        reserveBlockLoading: false\n      });\n    });\n\n    _defineProperty(this, \"sellTokens\", async event => {\n      event.preventDefault();\n      this.setState({\n        sellTokensLoading: true,\n        sellTokensErrorMessage: \"\"\n      });\n      this.setState({\n        sellTokensLoading: false\n      });\n    });\n\n    _defineProperty(this, \"transferTokens\", async event => {\n      event.preventDefault();\n      this.setState({\n        transferTokensLoading: true,\n        transferTokensErrorMessage: \"\"\n      });\n      this.setState({\n        transferTokensLoading: false\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    //const project = Project(props.query.address);\n    this._isMounted = false;\n    const investMintToken = InvestMint(props.query.address);\n    const summary = await investMintToken.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      tokenName: summary[0],\n      tokenSymbol: summary[1],\n      exchangeRate: summary[4],\n      blockCost: summary[3],\n      tokensPerBlock: summary[2]\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.checkAuthorization();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async checkAuthorization() {\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const authorization = await linkToken.methods.allowance(accounts[0], this.props.address).call();\n\n      if (authorization >= 1 * (10 ^ 18)) {\n        this._isMounted && this.setState({\n          isAuthorized: true\n        });\n        this.getReservation();\n      }\n    }\n  }\n\n  async getReservation() {\n    const investMintToken = InvestMint(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const activeReservation = await investMintToken.methods.getActiveReservation().call({\n        from: accounts[0]\n      });\n      this._isMounted && this.setState({\n        activeReservation: activeReservation\n      });\n    }\n\n    if (this.state.activeReservation == 0) {\n      console.log(\"No current reservations.\");\n    } else if (this.state.activeReservation != \"\") {\n      console.log(\"Has reservation: \", this.state.activeReservation);\n      const reservationSummary = await investMintToken.methods.getReservationSummary(this.state.activeReservation).call();\n      this.setState({\n        activeReservationStatus: reservationSummary[1],\n        activeReservationCost: reservationSummary[2],\n        activeReservationExpiration: reservationSummary[3],\n        activeReservationFinalized: reservationSummary[4]\n      });\n\n      switch (this.state.activeReservationStatus) {\n        case 0:\n          this.state.activeReservationStatus = \"open\";\n          break;\n\n        case 1:\n          this.state.activeReservationStatus = \"open\";\n          break;\n\n        default:\n          this.state.activeReservationStatus = \"open\";\n      } //window.location.reload(false);\n      //const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n      //window.location.assign(walletUrl);\n\n    } else {}\n  }\n\n  render() {\n    if (this.state.activeReservation == \"\" || this.state.activeReservation == 0) {\n      return __jsx(Layout, {\n        page: \"funding\"\n      }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Card, {\n        style: {\n          padding: \"10px\",\n          textAlign: \"left\",\n          fontSize: \"18px\"\n        }\n      }, __jsx(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, this.props.tokenName, \" | \", this.props.tokenSymbol), __jsx(\"p\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"18px\"\n        }\n      }, \"1 \", this.props.tokenSymbol, \" = \", this.props.exchangeRate, \" ETH\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Current Block Cost: \"), __jsx(\"br\", null), web3.utils.fromWei(this.props.blockCost, \"ether\"), \" Ether\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Tokens per Block:\"), \" \", __jsx(\"br\", null), web3.utils.fromWei(this.props.tokensPerBlock, \"ether\"), \" \", this.props.tokenSymbol), __jsx(Form, {\n        onSubmit: this.state.isAuthorized ? this.reserveTokenBlock : this.authorizeLink,\n        error: !!this.state.reserveBlockErrorMessage\n      }, __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.reserveBlockErrorMessage\n      }), __jsx(\"center\", null, __jsx(Button, {\n        size: \"large\",\n        loading: this.state.reserveBlockLoading,\n        color: \"teal\"\n      }, this.state.isAuthorized ? \"Reserve Block\" : \"Authorize LINK\")))))))));\n    } else {\n      return __jsx(Layout, {\n        page: \"funding\"\n      }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Card, {\n        style: {\n          padding: \"10px\",\n          textAlign: \"left\",\n          fontSize: \"18px\"\n        }\n      }, __jsx(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, this.props.tokenName, \" | \", this.props.tokenSymbol), __jsx(\"p\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"18px\"\n        }\n      }, \"1 \", this.props.tokenSymbol, \" = \", this.props.exchangeRate, \" ETH\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Reserved Block Cost: \"), __jsx(\"br\", null), web3.utils.fromWei(this.state.activeReservationCost, \"ether\"), \" \", \"Ether\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Block Expiration: \"), __jsx(\"br\", null), this.state.activeReservationExpiration), __jsx(\"p\", null, __jsx(\"strong\", null, \"Block Status: \"), __jsx(\"br\", null), this.state.activeReservationStatus), __jsx(\"p\", null, __jsx(\"strong\", null, \"Tokens per Block:\"), \" \", __jsx(\"br\", null), web3.utils.fromWei(this.props.tokensPerBlock, \"ether\"), \" \", this.props.tokenSymbol), __jsx(Form, {\n        onSubmit: this.purchaseBlock,\n        error: !!this.state.purchaseBlockErrorMessage\n      }, __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.purchaseBlockErrorMessage\n      }), __jsx(\"center\", null, __jsx(Button, {\n        size: \"large\",\n        loading: this.state.purchaseBlockLoading,\n        color: \"teal\"\n      }, \" \", \"Purchase Block\"), __jsx(\"br\", null))), __jsx(Form, null, __jsx(\"center\", null, __jsx(Button, {\n        style: {\n          marginTop: \"10px\"\n        },\n        size: \"large\",\n        loading: this.state.cancelBlockLoading,\n        color: \"red\"\n      }, \" \", \"Cancel Reservation\")))))))));\n    }\n  }\n\n}\n\nexport default TokenShow;","map":{"version":3,"sources":["/Users/max/Developer/StudioMax/InvestMint/pages/tokens/show.js"],"names":["React","Component","Form","Button","Input","Message","Grid","Card","Layout","InvestMint","Token","web3","Router","TokenShow","reserveBlockErrorMessage","sellTokensErrorMessage","purchaseBlockErrorMessage","cancelBlockErrorMessage","reserveBlockLoading","sellTokensLoading","purchaseBlockLoading","cancelBlockLoading","tokensToSell","tokensToTransfer","transferToAddress","isAuthorized","activeReservation","activeReservationStatus","activeReservationCost","activeReservationExpiration","activeReservationFinalized","event","preventDefault","setState","linkToken","accounts","eth","getAccounts","approvalAmount","methods","approve","props","address","send","from","window","location","reload","err","reserveTokenErrorMessage","message","console","log","investMintToken","reserveBlock","transferTokensLoading","transferTokensErrorMessage","getInitialProps","_isMounted","query","summary","getSummary","call","tokenName","tokenSymbol","exchangeRate","blockCost","tokensPerBlock","componentDidMount","checkAuthorization","componentWillUnmount","authorization","allowance","getReservation","getActiveReservation","state","reservationSummary","getReservationSummary","render","padding","textAlign","fontSize","utils","fromWei","reserveTokenBlock","authorizeLink","purchaseBlock","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport InvestMint from \"../../ethereum/investMint\";\nimport Token from \"../../ethereum/token\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass TokenShow extends Component {\n  state = {\n    reserveBlockErrorMessage: \"\",\n    sellTokensErrorMessage: \"\",\n    purchaseBlockErrorMessage: \"\",\n    cancelBlockErrorMessage: \"\",\n    reserveBlockLoading: false,\n    sellTokensLoading: false,\n    purchaseBlockLoading: false,\n    cancelBlockLoading: false,\n    tokensToSell: \"\",\n    tokensToTransfer: \"\",\n    transferToAddress: \"\",\n    isAuthorized: false,\n    activeReservation: \"\",\n    activeReservationStatus: \"\",\n    activeReservationCost: \"\",\n    activeReservationExpiration: \"\",\n    activeReservationFinalized: false\n  };\n\n  static async getInitialProps(props) {\n    //const project = Project(props.query.address);\n\n    this._isMounted = false;\n\n    const investMintToken = InvestMint(props.query.address);\n    const summary = await investMintToken.methods.getSummary().call();\n\n    return {\n      address: props.query.address,\n      tokenName: summary[0],\n      tokenSymbol: summary[1],\n      exchangeRate: summary[4],\n      blockCost: summary[3],\n      tokensPerBlock: summary[2]\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.checkAuthorization();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async checkAuthorization() {\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const authorization = await linkToken.methods\n        .allowance(accounts[0], this.props.address)\n        .call();\n\n      if (authorization >= 1 * (10 ^ 18)) {\n        this._isMounted && this.setState({ isAuthorized: true });\n        this.getReservation();\n      }\n    }\n  }\n\n  authorizeLink = async event => {\n    event.preventDefault();\n\n    this.setState({ reserveBlockLoading: true, reserveBlockErrorMessage: \"\" });\n    const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const approvalAmount = \"10000000000000000000\";\n      await linkToken.methods.approve(this.props.address, approvalAmount).send({\n        from: accounts[0]\n      });\n      // const reloadRoute = \"/t/\" + this.props.address;\n      // Router.pushRoute(reloadRoute);\n      //checkAuthorization();\n      window.location.reload(false);\n    } catch (err) {\n      this.setState({ reserveTokenErrorMessage: err.message });\n    }\n    this.setState({ reserveBlockLoading: false });\n  };\n\n  async getReservation() {\n    const investMintToken = InvestMint(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n    if (accounts[0]) {\n      const activeReservation = await investMintToken.methods\n        .getActiveReservation()\n        .call({ from: accounts[0] });\n\n      this._isMounted &&\n        this.setState({ activeReservation: activeReservation });\n    }\n    if (this.state.activeReservation == 0) {\n      console.log(\"No current reservations.\");\n    } else if (this.state.activeReservation != \"\") {\n      console.log(\"Has reservation: \", this.state.activeReservation);\n      const reservationSummary = await investMintToken.methods\n        .getReservationSummary(this.state.activeReservation)\n        .call();\n      this.setState({\n        activeReservationStatus: reservationSummary[1],\n        activeReservationCost: reservationSummary[2],\n        activeReservationExpiration: reservationSummary[3],\n        activeReservationFinalized: reservationSummary[4]\n      });\n      switch (this.state.activeReservationStatus) {\n        case 0:\n          this.state.activeReservationStatus = \"open\";\n          break;\n        case 1:\n          this.state.activeReservationStatus = \"open\";\n          break;\n        default:\n          this.state.activeReservationStatus = \"open\";\n      }\n      //window.location.reload(false);\n      //const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n      //window.location.assign(walletUrl);\n    } else {\n    }\n  }\n\n  reserveTokenBlock = async event => {\n    event.preventDefault();\n    console.log(\"Reserve Token Block...\");\n\n    this.setState({ reserveBlockLoading: true, reserveBlockErrorMessage: \"\" });\n    const investMintToken = InvestMint(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await investMintToken.methods.reserveBlock().send({\n        from: accounts[0]\n      });\n      window.location.reload(false);\n      //const walletUrl = \"/t/\" + this.props.address + \"/wallet\";\n      //window.location.assign(walletUrl);\n    } catch (err) {\n      this.setState({ reserveTokenErrorMessage: err.message });\n    }\n    this.setState({ reserveBlockLoading: false });\n  };\n\n  sellTokens = async event => {\n    event.preventDefault();\n\n    this.setState({ sellTokensLoading: true, sellTokensErrorMessage: \"\" });\n    this.setState({ sellTokensLoading: false });\n  };\n\n  transferTokens = async event => {\n    event.preventDefault();\n\n    this.setState({\n      transferTokensLoading: true,\n      transferTokensErrorMessage: \"\"\n    });\n    this.setState({ transferTokensLoading: false });\n  };\n\n  render() {\n    if (\n      this.state.activeReservation == \"\" ||\n      this.state.activeReservation == 0\n    ) {\n      return (\n        <Layout page=\"funding\">\n          <Grid>\n            <Grid.Row>\n              <Grid.Column>\n                <center>\n                  <Card\n                    style={{\n                      padding: \"10px\",\n                      textAlign: \"left\",\n                      fontSize: \"18px\"\n                    }}\n                  >\n                    <h2\n                      style={{\n                        textAlign: \"center\"\n                      }}\n                    >\n                      {this.props.tokenName} | {this.props.tokenSymbol}\n                    </h2>\n                    <p\n                      style={{\n                        textAlign: \"center\",\n                        fontSize: \"18px\"\n                      }}\n                    >\n                      1 {this.props.tokenSymbol} = {this.props.exchangeRate} ETH\n                    </p>\n                    <p>\n                      <strong>Current Block Cost: </strong>\n                      <br />\n                      {web3.utils.fromWei(this.props.blockCost, \"ether\")} Ether\n                    </p>\n                    <p>\n                      <strong>Tokens per Block:</strong> <br />\n                      {web3.utils.fromWei(\n                        this.props.tokensPerBlock,\n                        \"ether\"\n                      )}{\" \"}\n                      {this.props.tokenSymbol}\n                    </p>\n                    <Form\n                      onSubmit={\n                        this.state.isAuthorized\n                          ? this.reserveTokenBlock\n                          : this.authorizeLink\n                      }\n                      error={!!this.state.reserveBlockErrorMessage}\n                    >\n                      <Message\n                        error\n                        header=\"Oops!\"\n                        content={this.state.reserveBlockErrorMessage}\n                      />\n                      <center>\n                        <Button\n                          size=\"large\"\n                          loading={this.state.reserveBlockLoading}\n                          color=\"teal\"\n                        >\n                          {this.state.isAuthorized\n                            ? \"Reserve Block\"\n                            : \"Authorize LINK\"}\n                        </Button>\n                      </center>\n                    </Form>\n                  </Card>\n                </center>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Layout>\n      );\n    } else {\n      return (\n        <Layout page=\"funding\">\n          <Grid>\n            <Grid.Row>\n              <Grid.Column>\n                <center>\n                  <Card\n                    style={{\n                      padding: \"10px\",\n                      textAlign: \"left\",\n                      fontSize: \"18px\"\n                    }}\n                  >\n                    <h2\n                      style={{\n                        textAlign: \"center\"\n                      }}\n                    >\n                      {this.props.tokenName} | {this.props.tokenSymbol}\n                    </h2>\n                    <p\n                      style={{\n                        textAlign: \"center\",\n                        fontSize: \"18px\"\n                      }}\n                    >\n                      1 {this.props.tokenSymbol} = {this.props.exchangeRate} ETH\n                    </p>\n                    <p>\n                      <strong>Reserved Block Cost: </strong>\n                      <br />\n                      {web3.utils.fromWei(\n                        this.state.activeReservationCost,\n                        \"ether\"\n                      )}{\" \"}\n                      Ether\n                    </p>\n                    <p>\n                      <strong>Block Expiration: </strong>\n                      <br />\n                      {this.state.activeReservationExpiration}\n                    </p>\n                    <p>\n                      <strong>Block Status: </strong>\n                      <br />\n                      {this.state.activeReservationStatus}\n                    </p>\n                    <p>\n                      <strong>Tokens per Block:</strong> <br />\n                      {web3.utils.fromWei(\n                        this.props.tokensPerBlock,\n                        \"ether\"\n                      )}{\" \"}\n                      {this.props.tokenSymbol}\n                    </p>\n                    <Form\n                      onSubmit={this.purchaseBlock}\n                      error={!!this.state.purchaseBlockErrorMessage}\n                    >\n                      <Message\n                        error\n                        header=\"Oops!\"\n                        content={this.state.purchaseBlockErrorMessage}\n                      />\n                      <center>\n                        <Button\n                          size=\"large\"\n                          loading={this.state.purchaseBlockLoading}\n                          color=\"teal\"\n                        >\n                          {\" \"}\n                          Purchase Block\n                        </Button>\n                        <br />\n                      </center>\n                    </Form>\n\n                    <Form>\n                      <center>\n                        <Button\n                          style={{ marginTop: \"10px\" }}\n                          size=\"large\"\n                          loading={this.state.cancelBlockLoading}\n                          color=\"red\"\n                        >\n                          {\" \"}\n                          Cancel Reservation\n                        </Button>\n                      </center>\n                    </Form>\n                  </Card>\n                </center>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Layout>\n      );\n    }\n  }\n}\n\nexport default TokenShow;\n"]},"metadata":{},"sourceType":"module"}