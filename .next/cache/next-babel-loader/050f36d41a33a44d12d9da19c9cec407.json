{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Card, Checkbox, Grid, Container, Header, Form, Button, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link, Router } from \"../routes\";\n\nvar profile = require(\"../settings/profile\");\n\nvar Dashboard = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      tokenAddress: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      if (_this.state.tokenAddress != \"\") {\n        var mintRoute = \"/t/\" + _this.state.tokenAddress;\n        Router.pushRoute(mintRoute);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, {\n        style: {\n          marginTop: \"10px\",\n          marginLeft: \"0px\",\n          marginRight: \"0px\"\n        }\n      }, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        color: \"teal\"\n      }, __jsx(Container, {\n        text: true\n      }, __jsx(Header, {\n        as: \"h1\",\n        content: profile.COMPANY_NAME,\n        inverted: true,\n        style: {\n          fontSize: \"4em\",\n          fontWeight: \"normal\",\n          marginBottom: 0,\n          marginTop: \"1em\"\n        }\n      }), __jsx(Header, {\n        as: \"h2\",\n        content: profile.COMPANY_DESCRIPTION,\n        inverted: true,\n        style: {\n          fontSize: \"1.7em\",\n          fontWeight: \"normal\",\n          marginTop: \"1.5em\"\n        }\n      })))), __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        style: {\n          paddingLeft: \"0px\",\n          paddingRight: \"0px\"\n        }\n      }, __jsx(\"center\", null, __jsx(Card, {\n        fluid: true,\n        style: {\n          paddingTop: \"10px\",\n          paddingBottom: \"20px\",\n          paddingLeft: \"40px\",\n          paddingRight: \"40px\"\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(Input, {\n        placeholder: \"InvestMint Token Address: 0x...\",\n        value: this.state.tokenAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            tokenAddress: event.target.value\n          });\n        }\n      })), __jsx(Button, {\n        size: \"huge\",\n        color: \"teal\",\n        loading: this.state.sellTokensLoading\n      }, \"Launch Mint\"))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/max/Developer/StudioMax/InvestMint/pages/index.js"],"names":["React","Component","Card","Checkbox","Grid","Container","Header","Form","Button","Input","Message","Layout","Link","Router","profile","require","Dashboard","tokenAddress","event","state","mintRoute","pushRoute","marginTop","marginLeft","marginRight","COMPANY_NAME","fontSize","fontWeight","marginBottom","COMPANY_DESCRIPTION","paddingLeft","paddingRight","paddingTop","paddingBottom","onSubmit","setState","target","value","sellTokensLoading"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  Checkbox,\n  Grid,\n  Container,\n  Header,\n  Form,\n  Button,\n  Input,\n  Message\n} from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link, Router } from \"../routes\";\nconst profile = require(\"../settings/profile\");\n\nclass Dashboard extends Component {\n  state = {\n    tokenAddress: \"\"\n  };\n\n  onSubmit = event => {\n    if (this.state.tokenAddress != \"\") {\n      var mintRoute = \"/t/\" + this.state.tokenAddress;\n      Router.pushRoute(mintRoute);\n    }\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Grid\n          style={{ marginTop: \"10px\", marginLeft: \"0px\", marginRight: \"0px\" }}\n        >\n          <Grid.Row>\n            <Grid.Column color=\"teal\">\n              <Container text>\n                <Header\n                  as=\"h1\"\n                  content={profile.COMPANY_NAME}\n                  inverted\n                  style={{\n                    fontSize: \"4em\",\n                    fontWeight: \"normal\",\n                    marginBottom: 0,\n                    marginTop: \"1em\"\n                  }}\n                />\n                <Header\n                  as=\"h2\"\n                  content={profile.COMPANY_DESCRIPTION}\n                  inverted\n                  style={{\n                    fontSize: \"1.7em\",\n                    fontWeight: \"normal\",\n                    marginTop: \"1.5em\"\n                  }}\n                />\n              </Container>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column style={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}>\n              <center>\n                <Card\n                  fluid\n                  style={{\n                    paddingTop: \"10px\",\n                    paddingBottom: \"20px\",\n                    paddingLeft: \"40px\",\n                    paddingRight: \"40px\"\n                  }}\n                >\n                  <Form onSubmit={this.onSubmit}>\n                    <Form.Field>\n                      <Input\n                        placeholder=\"InvestMint Token Address: 0x...\"\n                        value={this.state.tokenAddress}\n                        onChange={event =>\n                          this.setState({ tokenAddress: event.target.value })\n                        }\n                      />\n                    </Form.Field>\n                    <Button\n                      size=\"huge\"\n                      color=\"teal\"\n                      loading={this.state.sellTokensLoading}\n                    >\n                      Launch Mint\n                    </Button>\n                  </Form>\n                </Card>\n              </center>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}