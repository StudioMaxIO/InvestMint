{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass WalletLoader extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      tokenAddress: \"\"\n    });\n\n    _defineProperty(this, \"onSubmit\", event => {\n      if (this.state.tokenAddress != \"\") {\n        var walletRoute = \"/t/\" + this.state.tokenAddress + \"/wallet\";\n        Router.pushRoute(walletRoute);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      page: \"wallet\"\n    }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Card, {\n      fluid: true,\n      style: {\n        paddingTop: \"10px\",\n        paddingBottom: \"20px\",\n        paddingLeft: \"40px\",\n        paddingRight: \"40px\"\n      }\n    }, __jsx(\"center\", null, __jsx(\"h1\", null, \"Wallet\"), __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(Input, {\n      placeholder: \"InvestMint Token Address: 0x...\",\n      value: this.state.tokenAddress,\n      onChange: event => this.setState({\n        tokenAddress: event.target.value\n      })\n    })), __jsx(Button, {\n      size: \"huge\",\n      color: \"teal\",\n      loading: this.state.sellTokensLoading\n    }, \"Launch Wallet\")))))))));\n  }\n\n}\n\nexport default WalletLoader;","map":{"version":3,"sources":["/Users/max/Developer/StudioMax/InvestMint/pages/load-wallet.js"],"names":["React","Component","Form","Button","Input","Message","Grid","Card","Layout","web3","Router","WalletLoader","tokenAddress","event","state","walletRoute","pushRoute","render","paddingTop","paddingBottom","paddingLeft","paddingRight","onSubmit","setState","target","value","sellTokensLoading"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,IAAvC,EAA6CC,IAA7C,QAAyD,mBAAzD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCAC3B;AACNW,MAAAA,YAAY,EAAE;AADR,KAD2B;;AAAA,sCAKxBC,KAAK,IAAI;AAClB,UAAI,KAAKC,KAAL,CAAWF,YAAX,IAA2B,EAA/B,EAAmC;AACjC,YAAIG,WAAW,GAAG,QAAQ,KAAKD,KAAL,CAAWF,YAAnB,GAAkC,SAApD;AACAF,QAAAA,MAAM,CAACM,SAAP,CAAiBD,WAAjB;AACD;AACF,KAVkC;AAAA;;AAYnCE,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb,OACE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,GAAN,QACE,MAAC,IAAD,CAAM,MAAN,QACE,sBACE,MAAC,IAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,MADP;AAELC,QAAAA,aAAa,EAAE,MAFV;AAGLC,QAAAA,WAAW,EAAE,MAHR;AAILC,QAAAA,YAAY,EAAE;AAJT;AAFT,OASE,sBACE,2BADF,EAEE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACE,MAAC,IAAD,CAAM,KAAN,QACE,MAAC,KAAD;AACE,MAAA,WAAW,EAAC,iCADd;AAEE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWF,YAFpB;AAGE,MAAA,QAAQ,EAAEC,KAAK,IACb,KAAKU,QAAL,CAAc;AAAEX,QAAAA,YAAY,EAAEC,KAAK,CAACW,MAAN,CAAaC;AAA7B,OAAd;AAJJ,MADF,CADF,EAUE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY;AAHtB,uBAVF,CAFF,CATF,CADF,CADF,CADF,CADF,CADF,CADF;AA2CD;;AAxDkC;;AA2DrC,eAAef,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass WalletLoader extends Component {\n  state = {\n    tokenAddress: \"\"\n  };\n\n  onSubmit = event => {\n    if (this.state.tokenAddress != \"\") {\n      var walletRoute = \"/t/\" + this.state.tokenAddress + \"/wallet\";\n      Router.pushRoute(walletRoute);\n    }\n  };\n\n  render() {\n    return (\n      <Layout page=\"wallet\">\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <center>\n                <Card\n                  fluid\n                  style={{\n                    paddingTop: \"10px\",\n                    paddingBottom: \"20px\",\n                    paddingLeft: \"40px\",\n                    paddingRight: \"40px\"\n                  }}\n                >\n                  <center>\n                    <h1>Wallet</h1>\n                    <Form onSubmit={this.onSubmit}>\n                      <Form.Field>\n                        <Input\n                          placeholder=\"InvestMint Token Address: 0x...\"\n                          value={this.state.tokenAddress}\n                          onChange={event =>\n                            this.setState({ tokenAddress: event.target.value })\n                          }\n                        />\n                      </Form.Field>\n                      <Button\n                        size=\"huge\"\n                        color=\"teal\"\n                        loading={this.state.sellTokensLoading}\n                      >\n                        Launch Wallet\n                      </Button>\n                    </Form>\n                  </center>\n                </Card>\n              </center>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default WalletLoader;\n"]},"metadata":{},"sourceType":"module"}