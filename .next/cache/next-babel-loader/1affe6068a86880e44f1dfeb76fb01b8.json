{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Card, Checkbox, Grid, Container, Header, Form, Button, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link, Router } from \"../routes\";\n\nvar profile = require(\"../settings/profile\");\n\nvar Dashboard = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      tokenAddress: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      if (_this.state.tokenAddress != \"\") {\n        var mintRoute = \"/t/\" + _this.state.tokenAddress;\n        Router.pushRoute(mintRoute);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, {\n        style: {\n          marginTop: \"10px\"\n        }\n      }, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        color: \"teal\"\n      }, __jsx(Container, {\n        text: true\n      }, __jsx(Header, {\n        as: \"h1\",\n        content: profile.COMPANY_NAME,\n        inverted: true,\n        style: {\n          fontSize: \"4em\",\n          fontWeight: \"normal\",\n          marginBottom: 0,\n          marginTop: \"1em\"\n        }\n      }), __jsx(Header, {\n        as: \"h2\",\n        content: profile.COMPANY_DESCRIPTION,\n        inverted: true,\n        style: {\n          fontSize: \"1.7em\",\n          fontWeight: \"normal\",\n          marginTop: \"1.5em\"\n        }\n      })))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(Input, {\n        placeholder: \"InvestMint Token Address: 0x...\",\n        value: this.state.tokenAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            tokenAddress: event.target.value\n          });\n        }\n      })), __jsx(Button, {\n        color: \"teal\",\n        loading: this.state.sellTokensLoading\n      }, \"Launch Mint\")))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}