{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport InvestMint from \"../../ethereum/investMint\";\nimport Token from \"../../ethereum/token\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass TokenShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      reserveBlockErrorMessage: \"\",\n      sellTokensErrorMessage: \"\",\n      reserveBlockLoading: false,\n      sellTokensLoading: false,\n      tokensToSell: \"\",\n      tokensToTransfer: \"\",\n      transferToAddress: \"\",\n      isAuthorized: false\n    });\n\n    _defineProperty(this, \"authorizeReservation\", async event => {\n      event.preventDefault();\n    });\n\n    _defineProperty(this, \"reserveTokenBlock\", async event => {\n      event.preventDefault();\n      this.setState({\n        reserveBlockLoading: true,\n        reserveBlockErrorMessage: \"\"\n      }); // try {\n      //   const accounts = await web3.eth.getAccounts();\n      //   await tokenFactory.methods\n      //     .createToken(\n      //       this.state.tokenName,\n      //       this.state.tokenSymbol,\n      //       this.state.wholeTokens,\n      //       this.state.decimals\n      //     )\n      //     .send({\n      //       from: accounts[0]\n      //     });\n      //\n      //   Router.pushRoute(\"/funding\");\n      // } catch (err) {\n      //   this.setState({ reserveTokenErrorMessage: err.message });\n      // }\n\n      this.setState({\n        reserveBlockLoading: false\n      });\n    });\n\n    _defineProperty(this, \"sellTokens\", async event => {\n      event.preventDefault();\n      this.setState({\n        sellTokensLoading: true,\n        sellTokensErrorMessage: \"\"\n      });\n      this.setState({\n        sellTokensLoading: false\n      });\n    });\n\n    _defineProperty(this, \"transferTokens\", async event => {\n      event.preventDefault();\n      this.setState({\n        transferTokensLoading: true,\n        transferTokensErrorMessage: \"\"\n      });\n      this.setState({\n        transferTokensLoading: false\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    //const project = Project(props.query.address);\n    this._isMounted = false;\n    const investMintToken = InvestMint(props.query.address);\n    const summary = await investMintToken.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      tokenName: summary[0],\n      tokenSymbol: summary[1],\n      userBalance: \"2004.110\",\n      exchangeRate: \"10000503000000000\",\n      blockCost: \"1000000000023400000\",\n      tokensPerBlock: \"1000\"\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.checkAuthorization();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async checkAuthorization() {\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n      const authorization = await linkToken.methods.allowance(accounts[0], this.props.address).call();\n\n      if (authorization >= 1 * (10 ^ 18)) {\n        this._isMounted && this.setState({\n          isAuthorized: true\n        });\n      }\n    }\n  }\n\n  render() {\n    //this.checkAuthorization();\n    return __jsx(Layout, {\n      page: \"funding\"\n    }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"center\", null, __jsx(Card, {\n      style: {\n        padding: \"10px\"\n      }\n    }, __jsx(\"h1\", null, this.props.tokenName, \" | \", this.props.tokenSymbol), __jsx(\"p\", null, __jsx(\"strong\", null, \"Block Cost: \")), __jsx(\"p\", null, web3.utils.fromWei(this.props.blockCost, \"ether\"), \" Ether\"), __jsx(\"p\", null, __jsx(\"strong\", null, \"Tokens per Block:\"), \" \", this.props.tokensPerBlock, \" \", this.props.tokenSymbol), __jsx(Form, {\n      onSubmit: this.state.isAuthorized ? this.reserveTokenBlock : this.authorizeReservation,\n      error: !!this.state.reserveBlockErrorMessage\n    }, __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.reserveBlockErrorMessage\n    }), __jsx(Button, {\n      size: \"large\",\n      loading: this.state.reserveBlockLoading,\n      color: \"teal\"\n    }, this.state.isAuthorized ? \"Reserve Block\" : \"Authorize LINK\"))))))));\n  }\n\n}\n\nexport default TokenShow;","map":{"version":3,"sources":["/Users/max/Developer/StudioMax/InvestMint/pages/tokens/show.js"],"names":["React","Component","Form","Button","Input","Message","Grid","Card","Layout","InvestMint","Token","web3","Router","TokenShow","reserveBlockErrorMessage","sellTokensErrorMessage","reserveBlockLoading","sellTokensLoading","tokensToSell","tokensToTransfer","transferToAddress","isAuthorized","event","preventDefault","setState","transferTokensLoading","transferTokensErrorMessage","getInitialProps","props","_isMounted","investMintToken","query","address","summary","methods","getSummary","call","tokenName","tokenSymbol","userBalance","exchangeRate","blockCost","tokensPerBlock","componentDidMount","checkAuthorization","componentWillUnmount","accounts","eth","getAccounts","linkToken","authorization","allowance","render","padding","utils","fromWei","state","reserveTokenBlock","authorizeReservation"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Input, Message, Grid, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport InvestMint from \"../../ethereum/investMint\";\nimport Token from \"../../ethereum/token\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\";\n\nclass TokenShow extends Component {\n  state = {\n    reserveBlockErrorMessage: \"\",\n    sellTokensErrorMessage: \"\",\n    reserveBlockLoading: false,\n    sellTokensLoading: false,\n    tokensToSell: \"\",\n    tokensToTransfer: \"\",\n    transferToAddress: \"\",\n    isAuthorized: false\n  };\n\n  static async getInitialProps(props) {\n    //const project = Project(props.query.address);\n\n    this._isMounted = false;\n\n    const investMintToken = InvestMint(props.query.address);\n    const summary = await investMintToken.methods.getSummary().call();\n\n    return {\n      address: props.query.address,\n      tokenName: summary[0],\n      tokenSymbol: summary[1],\n      userBalance: \"2004.110\",\n      exchangeRate: \"10000503000000000\",\n      blockCost: \"1000000000023400000\",\n      tokensPerBlock: \"1000\"\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.checkAuthorization();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async checkAuthorization() {\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts[0]) {\n      const linkToken = Token(\"0xa36085f69e2889c224210f603d836748e7dc0088\");\n      const authorization = await linkToken.methods\n        .allowance(accounts[0], this.props.address)\n        .call();\n\n      if (authorization >= 1 * (10 ^ 18)) {\n        this._isMounted && this.setState({ isAuthorized: true });\n      }\n    }\n  }\n\n  authorizeReservation = async event => {\n    event.preventDefault();\n  };\n\n  reserveTokenBlock = async event => {\n    event.preventDefault();\n\n    this.setState({ reserveBlockLoading: true, reserveBlockErrorMessage: \"\" });\n\n    // try {\n    //   const accounts = await web3.eth.getAccounts();\n    //   await tokenFactory.methods\n    //     .createToken(\n    //       this.state.tokenName,\n    //       this.state.tokenSymbol,\n    //       this.state.wholeTokens,\n    //       this.state.decimals\n    //     )\n    //     .send({\n    //       from: accounts[0]\n    //     });\n    //\n    //   Router.pushRoute(\"/funding\");\n    // } catch (err) {\n    //   this.setState({ reserveTokenErrorMessage: err.message });\n    // }\n\n    this.setState({ reserveBlockLoading: false });\n  };\n\n  sellTokens = async event => {\n    event.preventDefault();\n\n    this.setState({ sellTokensLoading: true, sellTokensErrorMessage: \"\" });\n    this.setState({ sellTokensLoading: false });\n  };\n\n  transferTokens = async event => {\n    event.preventDefault();\n\n    this.setState({\n      transferTokensLoading: true,\n      transferTokensErrorMessage: \"\"\n    });\n    this.setState({ transferTokensLoading: false });\n  };\n\n  render() {\n    //this.checkAuthorization();\n    return (\n      <Layout page=\"funding\">\n        <Grid>\n          <Grid.Row>\n            <Grid.Column>\n              <center>\n                <Card style={{ padding: \"10px\" }}>\n                  <h1>\n                    {this.props.tokenName} | {this.props.tokenSymbol}\n                  </h1>\n                  <p>\n                    <strong>Block Cost: </strong>\n                  </p>\n                  <p>\n                    {web3.utils.fromWei(this.props.blockCost, \"ether\")} Ether\n                  </p>\n                  <p>\n                    <strong>Tokens per Block:</strong>{\" \"}\n                    {this.props.tokensPerBlock} {this.props.tokenSymbol}\n                  </p>\n                  <Form\n                    onSubmit={\n                      this.state.isAuthorized\n                        ? this.reserveTokenBlock\n                        : this.authorizeReservation\n                    }\n                    error={!!this.state.reserveBlockErrorMessage}\n                  >\n                    <Message\n                      error\n                      header=\"Oops!\"\n                      content={this.state.reserveBlockErrorMessage}\n                    />\n                    <Button\n                      size=\"large\"\n                      loading={this.state.reserveBlockLoading}\n                      color=\"teal\"\n                    >\n                      {this.state.isAuthorized\n                        ? \"Reserve Block\"\n                        : \"Authorize LINK\"}\n                    </Button>\n                  </Form>\n                </Card>\n              </center>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default TokenShow;\n"]},"metadata":{},"sourceType":"module"}